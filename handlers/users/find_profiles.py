from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

from keyboards.inline.gaming_keyboards import profile_action_target_keyboard, profile_action_like_keyboard
from loader import dp, bot, db, _
from utils.db_api import models


# –ü–æ–ø–∞–¥–∞–µ–º —Å—é–¥–∞, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç "–°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã" –∏ —Ü–µ–ª—å –ø–æ–∏—Å–∫–∞ "–ß–µ–ª–æ–≤–µ–∫–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–π –∂–∏–∑–Ω–∏"
@dp.message_handler(state='find_profiles')
async def show_find_profiles(message: types.Message, state: FSMContext):
    data = await state.get_data()

    # –î–∞–Ω–Ω—ã–µ –ø–æ –Ω–∞–π–¥–µ–Ω–Ω—ã–º –ø—Ä–æ—Ñ–∏–ª—è–º
    profiles = data.get('profiles')
    count_profiles = data.get('count_profiles')
    current_profile_number = data.get('current_profile_number')

    current_profile: models.User = profiles[current_profile_number]
    language_current_profile = current_profile.language
    user_profile_id = current_profile.user_id

    # –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –∏—â–µ—Ç –∞–Ω–∫–µ—Ç—ã
    language = data.get('language')
    symbol = message.text

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ—Å—Ç–∞–≤–∏–ª –ª–∞–π–∫ –∞–Ω–∫–µ—Ç–µ
    if symbol == 'üíó':

        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –æ –ª–∞–π–∫–µ –≤ –ë–î
        await db.add_like_profile(user_profile_id)

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –ª–∞–π–∫–Ω—É–ª–∏ –∞–Ω–∫–µ—Ç—É
        all_users_liked = await db.get_users_liked_my_profile(user_profile_id)
        count_users_liked = len(all_users_liked)

        if count_users_liked == 1:
            caption = _('–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å {count_users_liked} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –ø–æ–∫–∞–∑–∞—Ç—å –µ–≥–æ?\n\n'
                        '1. –ü–æ–∫–∞–∑–∞—Ç—å.\n'
                        '2. –ù–µ —Ö–æ—á—É –±–æ–ª—å—à–µ –Ω–∏–∫–æ–≥–æ —Å–º–æ—Ç—Ä–µ—Ç—å.').format(count_users_liked=count_users_liked)
        elif count_users_liked % 10 == 1:
            caption = _('–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å {count_users_liked} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –ø–æ–∫–∞–∑–∞—Ç—å –∏—Ö?\n\n'
                        '1. –ü–æ–∫–∞–∑–∞—Ç—å.\n'
                        '2. –ù–µ —Ö–æ—á—É –±–æ–ª—å—à–µ –Ω–∏–∫–æ–≥–æ —Å–º–æ—Ç—Ä–µ—Ç—å.').format(count_users_liked=count_users_liked)
        else:
            caption = _('–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å {count_users_liked} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –ø–æ–∫–∞–∑–∞—Ç—å –∏—Ö?\n\n'
                        '1. –ü–æ–∫–∞–∑–∞—Ç—å.\n'
                        '2. –ù–µ —Ö–æ—á—É –±–æ–ª—å—à–µ –Ω–∏–∫–æ–≥–æ —Å–º–æ—Ç—Ä–µ—Ç—å.')

        await bot.send_message(chat_id=user_profile_id, text=caption, reply_markup=profile_action_like_keyboard)

        # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–Ω–∫–µ—Ç—ã
        user_profile_state = dp.current_state(chat=user_profile_id, user=user_profile_id)

        # –ò–∑–º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–Ω–∫–µ—Ç—ã
        await user_profile_state.set_state('in_like')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ñ–∏–ª–∏ –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å
        if current_profile_number + 1 < count_profiles:
            current_profile: models.User = profiles[current_profile_number + 1]

            game1_current_profile = current_profile.game1
            game2_current_profile = current_profile.game2

            if game1_current_profile is not None and game2_current_profile is not None:
                games_current_profile = f'{game1_current_profile}, {game2_current_profile}'
            elif game2_current_profile is None:
                games_current_profile = f'{game1_current_profile}'
            elif game1_current_profile is None:
                games_current_profile = f'{game2_current_profile}'
            else:
                games_current_profile = ''

            # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –†—É—Å—Å–∫–∏–π
            text_real_life = _('{current_profile.name}, {current_profile.age} –∏–∑ {current_profile.country}\n'
                               '–•–æ–±–±–∏: <b>{current_profile.hobby}</b>\n'
                               '–û —Å–µ–±–µ: <b>{current_profile.about_yourself}</b>\n'
                               '–ò–≥—Ä–∞–µ—Ç –≤ –∏–≥—Ä—ã: <b>{games_current_profile}</b>').format(current_profile,
                                                                                       games_current_profile)

            if current_profile.photo == 'None':
                await message.answer(text=text_real_life, reply_markup=profile_action_target_keyboard)
            else:
                await message.answer_photo(photo=current_profile.photo, caption=text_real_life,
                                           reply_markup=profile_action_target_keyboard)

            await state.update_data(current_profile_number=current_profile_number + 1)

        # –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å
        else:
            await message.answer(_('–ü—Ä–æ—Ñ–∏–ª–∏ –ø–æ –≤–∞—à–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º –ø–æ–∏—Å–∫–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å!\n'
                                   '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–∏—Å–∫ –ø–æ–∑–¥–Ω–µ–µ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞.'),
                                 reply_markup=ReplyKeyboardMarkup(keyboard=[
                                     [
                                         KeyboardButton(text=_('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                                     ]
                                 ], resize_keyboard=True, one_time_keyboard=True))

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –Ω–∞–ø–∏—Å–∞—Ç—å –ø–∏—Å—å–º–æ –ø—Ä–æ—Ñ–∏–ª—é
    elif symbol == 'üíå':
        await message.answer(_('–ù–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'),
                             reply_markup=ReplyKeyboardMarkup(keyboard=[
                                 [
                                     KeyboardButton(text=_('–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥'))
                                 ]
                             ], resize_keyboard=True, one_time_keyboard=True))

        await state.update_data(current_profile=current_profile, current_profile_number=current_profile_number)
        await state.set_state('send_message')

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ—Å—Ç–∞–≤–∏–ª –¥–∏–∑–ª–∞–π–∫ –∞–Ω–∫–µ—Ç–µ
    elif symbol == 'üëé':
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ñ–∏–ª–∏ –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å
        if current_profile_number + 1 < count_profiles:
            current_profile: models.User = profiles[current_profile_number + 1]

            game1_current_profile = current_profile.game1
            game2_current_profile = current_profile.game2

            if game1_current_profile is not None and game2_current_profile is not None:
                games_current_profile = f'{game1_current_profile}, {game2_current_profile}'
            elif game2_current_profile is None:
                games_current_profile = f'{game1_current_profile}'
            elif game1_current_profile is None:
                games_current_profile = f'{game2_current_profile}'
            else:
                games_current_profile = ''

            text_real_life = _('{current_profile.name}, {current_profile.age} –∏–∑ {current_profile.country}\n'
                               '–•–æ–±–±–∏: <b>{current_profile.hobby}</b>\n'
                               '–û —Å–µ–±–µ: <b>{current_profile.about_yourself}</b>\n'
                               '–ò–≥—Ä–∞–µ—Ç –≤ –∏–≥—Ä—ã: <b>{games_current_profile}</b>').format(current_profile=current_profile,
                                                                                       games_current_profile=games_current_profile)

            if current_profile.photo == 'None':
                await message.answer(text=text_real_life, reply_markup=profile_action_target_keyboard)
            else:
                await message.answer_photo(photo=current_profile.photo, caption=text_real_life,
                                           reply_markup=profile_action_target_keyboard)

            await state.update_data(current_profile_number=current_profile_number + 1)

        # –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å
        else:
            await message.answer(_('–ü—Ä–æ—Ñ–∏–ª–∏ –ø–æ –≤–∞—à–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º –ø–æ–∏—Å–∫–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å!\n'
                                   '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–∏—Å–∫ –ø–æ–∑–¥–Ω–µ–µ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞.'),
                                 reply_markup=ReplyKeyboardMarkup(keyboard=[
                                     [
                                         KeyboardButton(text=_('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                                     ]
                                 ], resize_keyboard=True, one_time_keyboard=True))

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª 'zzz'
    elif symbol == 'üí§':
        await message.answer(_('–ü–æ–¥–æ–∂–¥–µ–º, –ø–æ–∫–∞ –∫—Ç–æ-—Ç–æ —É–≤–∏–¥–∏—Ç —Ç–≤–æ—é –∞–Ω–∫–µ—Ç—É'))
        await message.answer(_('1. –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã\n'
                               '2. –ú–æ—è –∞–Ω–∫–µ—Ç–∞\n'
                               '3. –Ø –±–æ–ª—å—à–µ –Ω–µ —Ö–æ—á—É –Ω–∏–∫–æ–≥–æ –∏—Å–∫–∞—Ç—å'),
                             reply_markup=ReplyKeyboardMarkup(keyboard=[
                                 [
                                     KeyboardButton(text='1 üîé'),
                                     KeyboardButton(text='2'),
                                     KeyboardButton(text='3'),
                                 ]
                             ], resize_keyboard=True, one_time_keyboard=True))

        await state.update_data(current_profile=current_profile, current_profile_number=current_profile_number)

        await state.set_state('zzz')

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É, –∞ —á—Ç–æ-—Ç–æ –Ω–∞–ø–∏—Å–∞–ª
    else:
        await message.answer(_('–ù–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π —Å–∏–º–≤–æ–ª'))
