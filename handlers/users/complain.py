from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.builtin import Command
from emoji import emojize

from keyboards.inline.gaming_keyboards import complain_keyboard, profile_action_target_keyboard
from loader import db, dp
from utils.db_api import models


# –°—é–¥–∞ –ø–æ–ø–∞–¥–∞–µ–º, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è"(/complain)
@dp.message_handler(Command(['complain']), state='*')
async def command_complain(message: types.Message, state: FSMContext):
    data = await state.get_data()
    user: models.User = data.get('user_')
    profiles = data.get('profiles')

    if user is None:
        user_id = message.from_user.id
        user: models.User = await db.get_user(user_id)
        await state.update_data(user_=user)

    language = user.language

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è", –Ω–µ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—è –∞–Ω–∫–µ—Ç—ã
    if profiles is None:
        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –†—É—Å—Å–∫–∏–π
        if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            await message.answer('–ñ–∞–ª–æ–±—É –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –∞–Ω–∫–µ—Ç—ã')

        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
        else:
            await message.answer('You can leave a complaint only when viewing the profile')

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è", –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—è –∞–Ω–∫–µ—Ç—ã
    else:
        if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            await message.answer(f'–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –∂–∞–ª–æ–±—ã:\n\n'
                                 f'1. {emojize(":no_one_under_eighteen:")} –ú–∞—Ç–µ—Ä–∏–∞–ª –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö\n'
                                 f'2. {emojize(":shopping_cart:")} –ü—Ä–æ–¥–∞–∂–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥\n'
                                 f'3. {emojize(":muted_speaker:")} –ù–µ –æ—Ç–≤–µ—á–∞–µ—Ç\n'
                                 f'4. {emojize(":red_question_mark:")} –î—Ä—É–≥–æ–µ\n'
                                 f'5. {emojize(":multiply:")} –û—Ç–º–µ–Ω–∞\n', reply_markup=complain_keyboard)

        else:
            await message.answer(f'Specify the reason for the complaint:\n\n'
                                 f'1. {emojize(":no_one_under_eighteen:")} Adult material\n'
                                 f'2. {emojize(":shopping_cart:")} Sale of goods and services\n'
                                 f'3. {emojize(":muted_speaker:")} Not responding\n'
                                 f'4. {emojize(":red_question_mark:")} Other\n'
                                 f'5. {emojize(":multiply:")} Cancel\n', reply_markup=complain_keyboard)

        await state.set_state('reason_complaint')


# –°—é–¥–∞ –ø–æ–ø–∞–¥–∞–µ–º, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –ø—Ä–∏—á–∏–Ω—É –∂–∞–ª–æ–±—ã
@dp.message_handler(state='reason_complaint')
async def reason_complaint_handler(message: types.Message, state: FSMContext):
    data = await state.get_data()
    user: models.User = data.get('user_')
    language = user.language
    profiles = data.get('profiles')
    count_profiles = data.get('count_profiles')
    current_profile_number = data.get('current_profile_number')
    current_profile: models.User = profiles[current_profile_number]

    option = message.text

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∫–∞–∑–∞–ª –ø—Ä–∏—á–∏–Ω—É –∂–∞–ª–æ–±—ã "–ú–∞—Ç–µ—Ä–∏–∞–ª –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö"
    if option == 'üîû 1':
        reason_complaint = '–ú–∞—Ç–µ—Ä–∏–∞–ª –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö'

        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∞–ª–æ–± –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å
        complaint = await db.get_user_complaints(current_profile.user_id)

        # –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∞–ª–æ–± –º–µ–Ω—å—à–µ 3, —Ç–æ –ø—Ä–∏–±–∞–≤–ª—è–µ–º –µ—â–µ –æ–¥–Ω—É –∂–∞–ª–æ–±—É
        if complaint + 1 < 3:
            complaint += 1
            await current_profile.update(complaint=complaint).apply()

            # –î–æ–±–∞–≤–ª—è–µ–º –≤ –ë–î –ø—Ä–∏—á–∏–Ω—É –∂–∞–ª–æ–±—ã
            await db.add_complaint_for_profile(complaint_profile_id=current_profile.user_id,
                                               reason_complaint=reason_complaint)

        # –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∞–ª–æ–± –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å —Ä–∞–≤–Ω–æ 3, —Ç–æ –±–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ—Ñ–∏–ª—å
        else:
            complaint += 1
            await current_profile.update(complaint=complaint, enable=False).apply()

            # –î–æ–±–∞–≤–ª—è–µ–º –≤ –ë–î –ø—Ä–∏—á–∏–Ω—É –∂–∞–ª–æ–±—ã
            await db.add_complaint_for_profile(complaint_profile_id=current_profile.user_id,
                                               reason_complaint=reason_complaint)

        if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            await message.answer(f'–í–∞—à–∞ –∂–∞–ª–æ–±–∞ –ø—Ä–∏–Ω—è—Ç–∞.\n\n'
                                 f'–ñ–∞–ª–æ–±–∞: <b>–ú–∞—Ç–µ—Ä–∏–∞–ª –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö</b>\n\n'
                                 f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <b>{current_profile.name}, {current_profile.age}</b>')
        else:
            await message.answer(f'Your complaint has been accepted.\n\n'
                                 f'Complaint: <b>Adult material</b>\n\n'
                                 f'User: <b>{current_profile.name}, {current_profile.age}</b>')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –µ—â–µ –∞–Ω–∫–µ—Ç—ã –¥–ª—è –ø–æ–∫–∞–∑–∞
        if current_profile_number + 1 < count_profiles:
            next_profile_number = current_profile_number + 1
            next_profile: models.User = profiles[next_profile_number]

            caption = f'{next_profile.name}, {next_profile.age} - {next_profile.about_yourself}'
            await message.answer_photo(photo=next_profile.photo, caption=caption,
                                       reply_markup=profile_action_target_keyboard)

            await state.update_data(current_profile_number=next_profile_number)

            await state.set_state('find_profiles')

        # –ï—Å–ª–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –∞–Ω–∫–µ—Ç—ã
        else:
            if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
                await message.answer('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø—Ä–æ—Ñ–∏–ª–∏, –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø–æ–¥ –≤–∞—à–∏ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞, –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å!\n'
                                     '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫ –ø–æ–∑–¥–Ω–µ–µ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞.')

            else:
                await message.answer('Unfortunately, the profiles that fit your search criteria are over!\n'
                                     'Try resuming the search later or change the search criteria.')

            await state.reset_state()

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∫–∞–∑–∞–ª –ø—Ä–∏—á–∏–Ω—É –∂–∞–ª–æ–±—ã "–ü—Ä–æ–¥–∞–∂–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥"
    elif option == 'üõí 2':
        reason_complaint = '–ü—Ä–æ–¥–∞–∂–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥'

        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∞–ª–æ–± –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å
        complaint = await db.get_user_complaints(current_profile.user_id)

        # –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∞–ª–æ–± –º–µ–Ω—å—à–µ 3, —Ç–æ –ø—Ä–∏–±–∞–≤–ª—è–µ–º –µ—â–µ –æ–¥–Ω—É –∂–∞–ª–æ–±—É
        if complaint + 1 < 3:
            complaint += 1
            await current_profile.update(complaint=complaint).apply()

            # –î–æ–±–∞–≤–ª—è–µ–º –≤ –ë–î –ø—Ä–∏—á–∏–Ω—É –∂–∞–ª–æ–±—ã
            await db.add_complaint_for_profile(complaint_profile_id=current_profile.user_id,
                                               reason_complaint=reason_complaint)

        # –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∞–ª–æ–± –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å —Ä–∞–≤–Ω–æ 3, —Ç–æ –±–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ—Ñ–∏–ª—å
        else:
            complaint += 1
            await current_profile.update(complaint=complaint, enable=False).apply()

            # –î–æ–±–∞–≤–ª—è–µ–º –≤ –ë–î –ø—Ä–∏—á–∏–Ω—É –∂–∞–ª–æ–±—ã
            await db.add_complaint_for_profile(complaint_profile_id=current_profile.user_id,
                                               reason_complaint=reason_complaint)

        if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            await message.answer(f'–í–∞—à–∞ –∂–∞–ª–æ–±–∞ –ø—Ä–∏–Ω—è—Ç–∞.\n\n'
                                 f'–ñ–∞–ª–æ–±–∞: <b>–ü—Ä–æ–¥–∞–∂–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥</b>\n\n'
                                 f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <b>{current_profile.name}, {current_profile.age}</b>')
        else:
            await message.answer(f'Your complaint has been accepted.\n\n'
                                 f'Complaint: <b>Sale of goods and services</b>\n\n'
                                 f'User: <b>{current_profile.name}, {current_profile.age}</b>')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –µ—â–µ –∞–Ω–∫–µ—Ç—ã –¥–ª—è –ø–æ–∫–∞–∑–∞
        if current_profile_number + 1 < count_profiles:
            next_profile_number = current_profile_number + 1
            next_profile: models.User = profiles[next_profile_number]

            caption = f'{next_profile.name}, {next_profile.age} - {next_profile.about_yourself}'
            await message.answer_photo(photo=next_profile.photo, caption=caption,
                                       reply_markup=profile_action_target_keyboard)

            await state.update_data(current_profile_number=next_profile_number)

            await state.set_state('find_profiles')

        # –ï—Å–ª–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –∞–Ω–∫–µ—Ç—ã
        else:
            if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
                await message.answer('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø—Ä–æ—Ñ–∏–ª–∏, –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø–æ–¥ –≤–∞—à–∏ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞, –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å!\n'
                                     '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫ –ø–æ–∑–¥–Ω–µ–µ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞.')

            else:
                await message.answer('Unfortunately, the profiles that fit your search criteria are over!\n'
                                     'Try resuming the search later or change the search criteria.')

            await state.reset_state()

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∫–∞–∑–∞–ª –ø—Ä–∏—á–∏–Ω—É –∂–∞–ª–æ–±—ã "–ù–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    elif option == 'üîá 3':
        reason_complaint = '–ù–µ –æ—Ç–≤–µ—á–∞–µ—Ç'

        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∞–ª–æ–± –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å
        complaint = await db.get_user_complaints(current_profile.user_id)

        # –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∞–ª–æ–± –º–µ–Ω—å—à–µ 3, —Ç–æ –ø—Ä–∏–±–∞–≤–ª—è–µ–º –µ—â–µ –æ–¥–Ω—É –∂–∞–ª–æ–±—É
        if complaint + 1 < 3:
            complaint += 1
            await current_profile.update(complaint=complaint).apply()

            # –î–æ–±–∞–≤–ª—è–µ–º –≤ –ë–î –ø—Ä–∏—á–∏–Ω—É –∂–∞–ª–æ–±—ã
            await db.add_complaint_for_profile(complaint_profile_id=current_profile.user_id,
                                               reason_complaint=reason_complaint)

        # –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∞–ª–æ–± –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å —Ä–∞–≤–Ω–æ 3, —Ç–æ –±–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ—Ñ–∏–ª—å
        else:
            complaint += 1
            await current_profile.update(complaint=complaint, enable=False).apply()

            # –î–æ–±–∞–≤–ª—è–µ–º –≤ –ë–î –ø—Ä–∏—á–∏–Ω—É –∂–∞–ª–æ–±—ã
            await db.add_complaint_for_profile(complaint_profile_id=current_profile.user_id,
                                               reason_complaint=reason_complaint)

        if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            await message.answer(f'–í–∞—à–∞ –∂–∞–ª–æ–±–∞ –ø—Ä–∏–Ω—è—Ç–∞.\n\n'
                                 f'–ñ–∞–ª–æ–±–∞: <b>–ù–µ –æ—Ç–≤–µ—á–∞–µ—Ç</b>\n\n'
                                 f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <b>{current_profile.name}, {current_profile.age}</b>')
        else:
            await message.answer(f'Your complaint has been accepted.\n\n'
                                 f'Complaint: <b>Not responding</b>\n\n'
                                 f'User: <b>{current_profile.name}, {current_profile.age}</b>')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –µ—â–µ –∞–Ω–∫–µ—Ç—ã –¥–ª—è –ø–æ–∫–∞–∑–∞
        if current_profile_number + 1 < count_profiles:
            next_profile_number = current_profile_number + 1
            next_profile: models.User = profiles[next_profile_number]

            caption = f'{next_profile.name}, {next_profile.age} - {next_profile.about_yourself}'
            await message.answer_photo(photo=next_profile.photo, caption=caption,
                                       reply_markup=profile_action_target_keyboard)

            await state.update_data(current_profile_number=next_profile_number)

            await state.set_state('find_profiles')

        # –ï—Å–ª–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –∞–Ω–∫–µ—Ç—ã
        else:
            if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
                await message.answer('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø—Ä–æ—Ñ–∏–ª–∏, –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø–æ–¥ –≤–∞—à–∏ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞, –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å!\n'
                                     '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫ –ø–æ–∑–¥–Ω–µ–µ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞.')

            else:
                await message.answer('Unfortunately, the profiles that fit your search criteria are over!\n'
                                     'Try resuming the search later or change the search criteria.')

            await state.reset_state()

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∫–∞–∑–∞–ª –ø—Ä–∏—á–∏–Ω—É –∂–∞–ª–æ–±—ã "–î—Ä—É–≥–æ–µ"
    elif option == '‚ùì 4':

        if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            await message.answer('–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –∂–∞–ª–æ–±—ã')
        else:
            await message.answer('Write the reason for the complaint')

        await state.set_state('other_complaint')

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–û—Ç–º–µ–Ω–∞"
    elif option == '‚úñÔ∏è 5':
        caption = f'{current_profile.name}, {current_profile.age} - {current_profile.about_yourself}'
        await message.answer_photo(photo=current_profile.photo, caption=caption,
                                   reply_markup=profile_action_target_keyboard)

        await state.set_state('find_profiles')

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–µ –Ω–∞–∂–∞–ª –Ω–∏ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫)
    else:
        await message.answer('–ù–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π —Å–∏–º–≤–æ–ª')


# –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏—á–∏–Ω—É –∂–∞–ª–æ–±—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ–≥–¥–∞ –æ–Ω –≤—ã–±—Ä–∞–ª –≤–∞—Ä–∏–∞–Ω—Ç "–î—Ä—É–≥–æ–µ"
@dp.message_handler(state='other_complaint')
async def get_other_complaint(message: types.Message, state: FSMContext):
    data = await state.get_data()
    user: models.User = data.get('user_')
    language = user.language
    profiles = data.get('profiles')
    count_profiles = data.get('count_profiles')
    current_profile_number = data.get('current_profile_number')
    current_profile: models.User = profiles[current_profile_number]

    reason_complaint = message.text

    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∞–ª–æ–± –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å
    complaint = await db.get_user_complaints(current_profile.user_id)

    # –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∞–ª–æ–± –º–µ–Ω—å—à–µ 3, —Ç–æ –ø—Ä–∏–±–∞–≤–ª—è–µ–º –µ—â–µ –æ–¥–Ω—É –∂–∞–ª–æ–±—É
    if complaint + 1 < 3:
        complaint += 1
        await current_profile.update(complaint=complaint).apply()

        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –ë–î –ø—Ä–∏—á–∏–Ω—É –∂–∞–ª–æ–±—ã
        await db.add_complaint_for_profile(complaint_profile_id=current_profile.user_id,
                                           reason_complaint=reason_complaint)

    # –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∞–ª–æ–± –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å —Ä–∞–≤–Ω–æ 3, —Ç–æ –±–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ—Ñ–∏–ª—å
    else:
        complaint += 1
        await current_profile.update(complaint=complaint, enable=False).apply()

        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –ë–î –ø—Ä–∏—á–∏–Ω—É –∂–∞–ª–æ–±—ã
        await db.add_complaint_for_profile(complaint_profile_id=current_profile.user_id,
                                           reason_complaint=reason_complaint)

    if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
        await message.answer(f'–í–∞—à–∞ –∂–∞–ª–æ–±–∞ –ø—Ä–∏–Ω—è—Ç–∞.\n\n'
                             f'–ñ–∞–ª–æ–±–∞: <b>{reason_complaint}</b>\n\n'
                             f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <b>{current_profile.name}, {current_profile.age}</b>')
    else:
        await message.answer(f'Your complaint has been accepted.\n\n'
                             f'Complaint: <b>{reason_complaint}</b>\n\n'
                             f'User: <b>{current_profile.name}, {current_profile.age}</b>')

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –µ—â–µ –∞–Ω–∫–µ—Ç—ã –¥–ª—è –ø–æ–∫–∞–∑–∞
    if current_profile_number + 1 < count_profiles:
        next_profile_number = current_profile_number + 1
        next_profile: models.User = profiles[next_profile_number]

        caption = f'{next_profile.name}, {next_profile.age} - {next_profile.about_yourself}'
        await message.answer_photo(photo=next_profile.photo, caption=caption,
                                   reply_markup=profile_action_target_keyboard)

        await state.update_data(current_profile_number=next_profile_number)

        await state.set_state('find_profiles')

    # –ï—Å–ª–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –∞–Ω–∫–µ—Ç—ã
    else:
        if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            await message.answer('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø—Ä–æ—Ñ–∏–ª–∏, –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø–æ–¥ –≤–∞—à–∏ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞, –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å!\n'
                                 '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫ –ø–æ–∑–¥–Ω–µ–µ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞.')

        else:
            await message.answer('Unfortunately, the profiles that fit your search criteria are over!\n'
                                 'Try resuming the search later or change the search criteria.')

        await state.reset_state()
