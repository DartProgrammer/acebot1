import datetime

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

from handlers.users.start import db
from keyboards.inline.gaming_keyboards import profile_action_target_keyboard, profile_action_like_keyboard
from loader import dp, bot
from utils.db_api import models


# –°—é–¥–∞ –ø–æ–ø–∞–¥–∞–µ–º, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å–∞–ª –ø–∏—Å—å–º–æ, –ª–∏–±–æ –Ω–∞–∂–∞–ª "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
@dp.message_handler(state='send_message_just_play')
async def send_message(message: types.Message, state: FSMContext):
    data = await state.get_data()
    language = data.get('language')

    profiles = data.get('profiles')
    count_profiles = data.get('count_profiles')
    current_profile_number = data.get('current_profile_number')
    current_profile: models.User = data.get('current_profile')
    language_current_profile = current_profile.language

    game1_current_profile = current_profile.game1
    game2_current_profile = current_profile.game2

    if game1_current_profile is not None and game2_current_profile is not None:
        games_current_profile = f'{game1_current_profile}, {game2_current_profile}'
    elif game2_current_profile is None:
        games_current_profile = f'{game1_current_profile}'
    elif game1_current_profile is None:
        games_current_profile = f'{game2_current_profile}'
    else:
        games_current_profile = ''

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
    if message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥' or message.text == 'Go back':
        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –†—É—Å—Å–∫–∏–π
        if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':

            text_just_play_ru = f'–í–æ–∑—Ä–∞—Å—Ç: <b>{current_profile.age}</b>\n' \
                                f'–ü–æ–ª: <b>{current_profile.gender}</b>\n' \
                                f'–¶–µ–ª—å: <b>{current_profile.purpose}</b>\n' \
                                f'–£—Ä–æ–≤–µ–Ω—å –∏–≥—Ä—ã: <b>{current_profile.play_level}</b>\n' \
                                f'–ö/–î: <b>{current_profile.cool_down}</b>\n' \
                                f'–û —Å–µ–±–µ: <b>{current_profile.about_yourself}</b>\n' \
                                f'–ò–≥—Ä–∞–µ—Ç –≤ –∏–≥—Ä—ã: <b>{games_current_profile}</b>'

            if current_profile.photo == 'None':
                await message.answer(text=text_just_play_ru, reply_markup=profile_action_target_keyboard)
            else:
                await message.answer_photo(photo=current_profile.photo, caption=text_just_play_ru,
                                           reply_markup=profile_action_target_keyboard)

        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
        else:

            text_just_play_en = f'Age: <b>{current_profile.age}</b>\n' \
                                f'Gender: <b>{current_profile.gender}</b>\n' \
                                f'Purpose: <b>{current_profile.purpose}</b>\n' \
                                f'Level of play: <b>{current_profile.play_level}</b>\n' \
                                f'Cool down: <b>{current_profile.cool_down}</b>\n' \
                                f'About: <b>{current_profile.about_yourself}</b>\n' \
                                f'Games: <b>{games_current_profile}</b>'

            if current_profile.photo == 'None':
                await message.answer(text=text_just_play_en, reply_markup=profile_action_target_keyboard)
            else:
                await message.answer_photo(photo=current_profile.photo, caption=text_just_play_en,
                                           reply_markup=profile_action_target_keyboard)

        await state.update_data(current_profile_number=current_profile_number)

        await state.set_state('find_profiles_just_play')

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å–∞–ª –ø–∏—Å—å–º–æ
    else:
        text = message.text
        user_id_to_message = current_profile.user_id

        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –æ –ø–∏—Å—å–º–µ –≤ –ë–î
        send_message_profiles = models.SendMessageProfiles(user_id=message.from_user.id,
                                                           profile_id=user_id_to_message,
                                                           send_message_text=text,
                                                           timestamp=datetime.datetime.now())
        await send_message_profiles.create()

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–ø–∏—Å–∞–ª–∏ –ø–∏—Å—å–º–æ
        all_users_send_message = await db.get_users_send_message(user_id_to_message)
        count_users_send_message = len(all_users_send_message)

        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –∞–Ω–∫–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –†—É—Å—Å–∫–∏–π
        if language_current_profile == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            if count_users_send_message == 1:
                caption = f'–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å {count_users_send_message} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –ø–æ–∫–∞–∑–∞—Ç—å –µ–≥–æ?\n\n' \
                          f'1. –ü–æ–∫–∞–∑–∞—Ç—å.\n' \
                          f'2. –ù–µ —Ö–æ—á—É –±–æ–ª—å—à–µ –Ω–∏–∫–æ–≥–æ —Å–º–æ—Ç—Ä–µ—Ç—å.'
            elif count_users_send_message % 10 == 1:
                caption = f'–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å {count_users_send_message} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –ø–æ–∫–∞–∑–∞—Ç—å –∏—Ö?\n\n' \
                          f'1. –ü–æ–∫–∞–∑–∞—Ç—å.\n' \
                          f'2. –ù–µ —Ö–æ—á—É –±–æ–ª—å—à–µ –Ω–∏–∫–æ–≥–æ —Å–º–æ—Ç—Ä–µ—Ç—å.'
            else:
                caption = f'–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å {count_users_send_message} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –ø–æ–∫–∞–∑–∞—Ç—å –∏—Ö?\n\n' \
                          f'1. –ü–æ–∫–∞–∑–∞—Ç—å.\n' \
                          f'2. –ù–µ —Ö–æ—á—É –±–æ–ª—å—à–µ –Ω–∏–∫–æ–≥–æ —Å–º–æ—Ç—Ä–µ—Ç—å.'

        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –∞–Ω–∫–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
        else:
            if count_users_send_message == 1:
                caption = f'{count_users_send_message} user liked your profile, should I show it?\n\n' \
                          f'1. Show.\n' \
                          f"2. I don't want to watch anyone."
            elif count_users_send_message % 10 == 1:
                caption = f'{count_users_send_message} users liked your profile, should I show them?\n\n' \
                          f'1. Show.\n' \
                          f"2. I don't want to watch anyone."
            else:
                caption = f'{count_users_send_message} users liked your profile, should I show them?\n\n' \
                          f'1. Show.\n' \
                          f"2. I don't want to watch anyone."

        await bot.send_message(chat_id=user_id_to_message, text=caption, reply_markup=profile_action_like_keyboard)

        # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–Ω–∫–µ—Ç—ã
        user_profile_state = dp.current_state(chat=user_id_to_message, user=user_id_to_message)

        # –ò–∑–º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–Ω–∫–µ—Ç—ã
        await user_profile_state.set_state('in_send_message_just_play')

        if current_profile_number + 1 < count_profiles:
            current_profile: models.User = profiles[current_profile_number + 1]

            # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –†—É—Å—Å–∫–∏–π
            if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
                text_just_play_ru = f'–í–æ–∑—Ä–∞—Å—Ç: <b>{current_profile.age}</b>\n' \
                                    f'–ü–æ–ª: <b>{current_profile.gender}</b>\n' \
                                    f'–¶–µ–ª—å: <b>{current_profile.purpose}</b>\n' \
                                    f'–£—Ä–æ–≤–µ–Ω—å –∏–≥—Ä—ã: <b>{current_profile.play_level}</b>\n' \
                                    f'–ö/–î: <b>{current_profile.cool_down}</b>\n' \
                                    f'–û —Å–µ–±–µ: <b>{current_profile.about_yourself}</b>\n' \
                                    f'–ò–≥—Ä–∞–µ—Ç –≤ –∏–≥—Ä—ã: <b>{games_current_profile}</b>'

                if current_profile.photo == 'None':
                    await message.answer(text=text_just_play_ru, reply_markup=profile_action_target_keyboard)
                else:
                    await message.answer_photo(photo=current_profile.photo, caption=text_just_play_ru,
                                               reply_markup=profile_action_target_keyboard)

            # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
            else:
                text_just_play_en = f'Age: <b>{current_profile.age}</b>\n' \
                                    f'Gender: <b>{current_profile.gender}</b>\n' \
                                    f'Purpose: <b>{current_profile.purpose}</b>\n' \
                                    f'Level of play: <b>{current_profile.play_level}</b>\n' \
                                    f'Cool down: <b>{current_profile.cool_down}</b>\n' \
                                    f'About: <b>{current_profile.about_yourself}</b>\n' \
                                    f'Games: <b>{games_current_profile}</b>'

                if current_profile.photo == 'None':
                    await message.answer(text=text_just_play_en, reply_markup=profile_action_target_keyboard)
                else:
                    await message.answer_photo(photo=current_profile.photo, caption=text_just_play_en,
                                               reply_markup=profile_action_target_keyboard)

            await state.update_data(current_profile_number=current_profile_number + 1)

            await state.set_state('find_profiles_just_play')

        # –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å
        else:
            if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
                await message.answer('–ü—Ä–æ—Ñ–∏–ª–∏ –ø–æ –≤–∞—à–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º –ø–æ–∏—Å–∫–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å!\n'
                                     '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–∏—Å–∫ –ø–æ–∑–¥–Ω–µ–µ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞.',
                                     reply_markup=ReplyKeyboardMarkup(keyboard=[
                                         [
                                             KeyboardButton(text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
                                         ]
                                     ], resize_keyboard=True, one_time_keyboard=True))
            else:
                await message.answer('Profiles based on your search criteria are over!\n'
                                     'Try to repeat the search later or change the search criteria.',
                                     reply_markup=ReplyKeyboardMarkup(keyboard=[
                                         [
                                             KeyboardButton(text='Main menu')
                                         ]
                                     ], resize_keyboard=True, one_time_keyboard=True))
