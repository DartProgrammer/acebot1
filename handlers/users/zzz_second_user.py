from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

from keyboards.inline.gaming_keyboards import profile_action_target_keyboard, menu_my_profile_keyboard
from loader import dp, db
from utils.db_api import models


# –°—é–¥–∞ –ø–æ–ø–∞–¥–∞–µ–º, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "zzz"
@dp.message_handler(state='zzz_second_user')
async def handler_zzz(message: types.Message, state: FSMContext):
    second_user_id = message.from_user.id
    second_user: models.User = await db.get_user(second_user_id)
    language_second_user = second_user.language
    option = message.text

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –≤–∞—Ä–∏–∞–Ω—Ç 1 "–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª–∏, –∫–æ—Ç–æ—Ä—ã–º —è –Ω—Ä–∞–≤–ª—é—Å—å"
    if option == '1':
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –ª–∞–π–∫–Ω—É–ª–∏ –∞–Ω–∫–µ—Ç—É
        all_users_liked = await db.get_users_liked_my_profile(second_user_id)
        current_profile_liked_number = 0
        count_users_liked = len(all_users_liked)
        current_profile: models.User = all_users_liked[current_profile_liked_number]
        count_users_liked_for_text = count_users_liked - 1

        await state.update_data(second_user=second_user,
                                all_users_liked=all_users_liked,
                                count_users_liked=count_users_liked,
                                current_profile_liked_number=current_profile_liked_number,
                                count_users_liked_for_text=count_users_liked_for_text)

        photo = current_profile.photo
        game1 = current_profile.game1
        game2 = current_profile.game2

        if game1 is not None and game2 is not None:
            games = f'{game1}, {game2}'
        elif game2 is None:
            games = f'{game1}'
        elif game1 is None:
            games = f'{game2}'
        else:
            games = ''

        if language_second_user == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            # –ò–∑–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ª–∞–π–∫–æ–≤
            if count_users_liked == 1:
                text = f'–ö–æ–º—É-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞:\n\n' \
                       f'{current_profile.name}, {current_profile.age} –∏–∑ {current_profile.country}\n' \
                       f'–•–æ–±–±–∏: <b>{current_profile.hobby}</b>\n' \
                       f'–û —Å–µ–±–µ: <b>{current_profile.about_yourself}</b>\n' \
                       f'–ò–≥—Ä–∞–µ—Ç –≤ –∏–≥—Ä—ã: <b>{games}</b>'
            else:
                text = f'–ö–æ–º—É-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞ (–∏ –µ—â—ë {count_users_liked_for_text})\n\n' \
                       f'{current_profile.name}, {current_profile.age} –∏–∑ {current_profile.country}\n' \
                       f'–•–æ–±–±–∏: <b>{current_profile.hobby}</b>\n' \
                       f'–û —Å–µ–±–µ: <b>{current_profile.about_yourself}</b>\n' \
                       f'–ò–≥—Ä–∞–µ—Ç –≤ –∏–≥—Ä—ã: <b>{games}</b>'

        else:
            if count_users_liked == 1:
                text = f'Someone liked your profile:\n\n' \
                       f'{current_profile.name}, {current_profile.age} from {current_profile.country}\n' \
                       f'Hobby: <b>{current_profile.hobby}</b>\n' \
                       f'About: <b>{current_profile.about_yourself}</b>\n' \
                       f'Games: <b>{games}</b>'
            else:
                text = f'Someone liked your profile (and more {count_users_liked_for_text})\n\n' \
                       f'{current_profile.name}, {current_profile.age} from {current_profile.country}\n' \
                       f'Hobby: <b>{current_profile.hobby}</b>\n' \
                       f'About: <b>{current_profile.about_yourself}</b>\n' \
                       f'Games: <b>{games}</b>'

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ —Ñ–æ—Ç–æ
        if photo == 'None':
            await message.answer(text=text, reply_markup=profile_action_target_keyboard)

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ñ–æ—Ç–æ
        else:
            await message.answer_photo(photo=photo, caption=text, reply_markup=profile_action_target_keyboard)

        await state.set_state('in_like')

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –≤–∞—Ä–∏–∞–Ω—Ç 2 "–ú–æ—è –∞–Ω–∫–µ—Ç–∞"
    elif option == '2':

        game1 = second_user.game1
        game2 = second_user.game2

        if game1 is not None and game2 is not None:
            games = f'{game1}, {game2}'
        elif game2 is None:
            games = f'{game1}'
        elif game1 is None:
            games = f'{game2}'
        else:
            games = ''

        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –†—É—Å—Å–∫–∏–π
        if language_second_user == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':

            text_ru = f'–ò–º—è: <b>{second_user.name}</b>\n' \
                      f'–í–æ–∑—Ä–∞—Å—Ç: <b>{second_user.age}</b>\n' \
                      f'–ü–æ–ª: <b>{second_user.gender}</b>\n' \
                      f'–ò—â—É: <b>{second_user.purpose}</b>\n' \
                      f'–ö–æ–≥–æ –∏—â—É: <b>{second_user.who_search}</b>\n' \
                      f'–°—Ç—Ä–∞–Ω–∞: <b>{second_user.country}</b>\n' \
                      f'–ì–æ—Ä–æ–¥: <b>{second_user.city}</b>\n' \
                      f'–û —Å–µ–±–µ: <b>{second_user.about_yourself}</b>\n' \
                      f'–•–æ–±–±–∏: <b>{second_user.hobby}</b>\n' \
                      f'–í –∫–∞–∫–∏–µ –∏–≥—Ä—ã –∏–≥—Ä–∞—é: <b>{games}</b>'

            await message.answer('–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:')

            if second_user.photo == 'None':
                await message.answer(text=text_ru)
            else:
                await message.answer_photo(photo=second_user.photo, caption=text_ru)

            await message.answer(text='1. –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ\n'
                                      '2. –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ\n'
                                      '3. –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –∞–Ω–∫–µ—Ç—ã\n'
                                      '4. –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã', reply_markup=menu_my_profile_keyboard)

        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
        else:
            text_en = f'Name: <b>{second_user.name}</b>\n' \
                      f'Age: <b>{second_user.age}</b>\n' \
                      f'Gender: <b>{second_user.gender}</b>\n' \
                      f'Search: <b>{second_user.purpose}</b>\n' \
                      f'Who search: <b>{second_user.who_search}</b>\n' \
                      f'Country: <b>{second_user.country}</b>\n' \
                      f'City: <b>{second_user.city}</b>\n' \
                      f'About yourself: <b>{second_user.about_yourself}</b>\n' \
                      f'Hobby: <b>{second_user.hobby}</b>\n' \
                      f'Playing games: <b>{games}</b>'

            await message.answer('Your profile:')

            if second_user.photo == 'None':
                await message.answer(text=text_en)
            else:
                await message.answer_photo(photo=second_user.photo, caption=text_en)

            await message.answer(text='1. Edit my profile\n'
                                      '2. Change my photo\n'
                                      '3. Change profile text\n'
                                      '4. View profiles', reply_markup=menu_my_profile_keyboard)

        await state.update_data(user_=second_user)
        await state.set_state('my_profile_state')

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –≤–∞—Ä–∏–∞–Ω—Ç 3 "–Ø –±–æ–ª—å—à–µ –Ω–µ —Ö–æ—á—É –Ω–∏–∫–æ–≥–æ –∏—Å–∫–∞—Ç—å"
    elif option == '3':
        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –†—É—Å—Å–∫–∏–π
        if language_second_user == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            text_ru = '–¢–∞–∫ —Ç—ã –Ω–µ —É–∑–Ω–∞–µ—à—å, —á—Ç–æ –∫–æ–º—É-—Ç–æ –Ω—Ä–∞–≤–∏—à—å—Å—è... –¢–æ—á–Ω–æ —Ö–æ—á–µ—à—å –æ—Ç–∫–ª—é—á–∏—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É?\n\n' \
                      '1. –î–∞, –æ—Ç–∫–ª—é—á–∏—Ç—å –∞–Ω–∫–µ—Ç—É.\n' \
                      '2. –ù–µ—Ç, –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥.'

            await message.answer(text=text_ru, reply_markup=ReplyKeyboardMarkup(keyboard=[
                [
                    KeyboardButton(text='1'),
                    KeyboardButton(text='2')
                ]
            ], resize_keyboard=True, one_time_keyboard=True))

        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
        else:
            text_en = "That way you won't know that someone likes you... " \
                      "Are you sure you want to disable your profile?\n\n" \
                      "1. Yes, disable the profile.\n" \
                      "2. No, go back."

            await message.answer(text=text_en, reply_markup=ReplyKeyboardMarkup(keyboard=[
                [
                    KeyboardButton(text='1'),
                    KeyboardButton(text='2')
                ]
            ], resize_keyboard=True, one_time_keyboard=True))

        await state.set_state('disable_second_profile')

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤—ã–±—Ä–∞–ª –≤–∞—Ä–∏–∞–Ω—Ç, –∞ —á—Ç–æ-—Ç–æ –Ω–∞–ø–∏—Å–∞–ª
    else:
        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –†—É—Å—Å–∫–∏–π
        if language_second_user == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            await message.answer('–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞')

        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
        else:
            await message.answer('There is no such answer option')


# –°—é–¥–∞ –ø–æ–ø–∞–¥–∞–µ–º, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "zzz"
@dp.message_handler(state='zzz_second_user_send_message')
async def handler_zzz(message: types.Message, state: FSMContext):
    second_user_id = message.from_user.id
    second_user: models.User = await db.get_user(second_user_id)
    language_second_user = second_user.language
    option = message.text

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –≤–∞—Ä–∏–∞–Ω—Ç 1 "–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª–∏, –∫–æ—Ç–æ—Ä—ã–º —è –Ω—Ä–∞–≤–ª—é—Å—å"
    if option == '1':

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–ø–∏—Å–∞–ª–∏ –ø–∏—Å—å–º–æ
        all_users_send_message = await db.get_users_send_message(second_user_id)
        current_profile_send_message = 0
        count_users_send_message = len(all_users_send_message)
        current_profile: models.User = all_users_send_message[current_profile_send_message]
        count_users_send_message_for_text = count_users_send_message - 1

        await state.update_data(second_user=second_user,
                                all_users_send_message=all_users_send_message,
                                count_users_send_message=count_users_send_message,
                                current_profile_send_message=current_profile_send_message,
                                count_users_send_message_for_text=count_users_send_message_for_text)

        photo = current_profile.photo
        game1 = current_profile.game1
        game2 = current_profile.game2

        if game1 is not None and game2 is not None:
            games = f'{game1}, {game2}'
        elif game2 is None:
            games = f'{game1}'
        elif game1 is None:
            games = f'{game2}'
        else:
            games = ''

        if language_second_user == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            # –ò–∑–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ª–∞–π–∫–æ–≤
            if count_users_send_message == 1:
                text = f'–ö–æ–º—É-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞:\n\n' \
                       f'{current_profile.name}, {current_profile.age} –∏–∑ {current_profile.country}\n' \
                       f'–•–æ–±–±–∏: <b>{current_profile.hobby}</b>\n' \
                       f'–û —Å–µ–±–µ: <b>{current_profile.about_yourself}</b>\n' \
                       f'–ò–≥—Ä–∞–µ—Ç –≤ –∏–≥—Ä—ã: <b>{games}</b>' \
                       f'–ü–∏—Å—å–º–æ: <b>{current_profile.send_message_text}</b>'
            else:
                text = f'–ö–æ–º—É-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞ (–∏ –µ—â—ë {count_users_send_message_for_text})\n\n' \
                       f'{current_profile.name}, {current_profile.age} –∏–∑ {current_profile.country}\n' \
                       f'–•–æ–±–±–∏: <b>{current_profile.hobby}</b>\n' \
                       f'–û —Å–µ–±–µ: <b>{current_profile.about_yourself}</b>\n' \
                       f'–ò–≥—Ä–∞–µ—Ç –≤ –∏–≥—Ä—ã: <b>{games}</b>' \
                       f'–ü–∏—Å—å–º–æ: <b>{current_profile.send_message_text}</b>'

        else:
            if count_users_send_message == 1:
                text = f'Someone liked your profile:\n\n' \
                       f'{current_profile.name}, {current_profile.age} from {current_profile.country}\n' \
                       f'Hobby: <b>{current_profile.hobby}</b>\n' \
                       f'About: <b>{current_profile.about_yourself}</b>\n' \
                       f'Games: <b>{games}</b>' \
                       f'Message: <b>{current_profile.send_message_text}</b>'
            else:
                text = f'Someone liked your profile (and more {count_users_send_message_for_text})\n\n' \
                       f'{current_profile.name}, {current_profile.age} from {current_profile.country}\n' \
                       f'Hobby: <b>{current_profile.hobby}</b>\n' \
                       f'About: <b>{current_profile.about_yourself}</b>\n' \
                       f'Games: <b>{games}</b>' \
                       f'Message: <b>{current_profile.send_message_text}</b>'

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ —Ñ–æ—Ç–æ
        if photo == 'None':
            await message.answer(text=text, reply_markup=profile_action_target_keyboard)

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ñ–æ—Ç–æ
        else:
            await message.answer_photo(photo=photo, caption=text, reply_markup=profile_action_target_keyboard)

        await state.set_state('in_send_message')

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –≤–∞—Ä–∏–∞–Ω—Ç 2 "–ú–æ—è –∞–Ω–∫–µ—Ç–∞"
    elif option == '2':

        game1 = second_user.game1
        game2 = second_user.game2

        if game1 is not None and game2 is not None:
            games = f'{game1}, {game2}'
        elif game2 is None:
            games = f'{game1}'
        elif game1 is None:
            games = f'{game2}'
        else:
            games = ''

        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –†—É—Å—Å–∫–∏–π
        if language_second_user == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':

            text_ru = f'–ò–º—è: <b>{second_user.name}</b>\n' \
                      f'–í–æ–∑—Ä–∞—Å—Ç: <b>{second_user.age}</b>\n' \
                      f'–ü–æ–ª: <b>{second_user.gender}</b>\n' \
                      f'–ò—â—É: <b>{second_user.purpose}</b>\n' \
                      f'–ö–æ–≥–æ –∏—â—É: <b>{second_user.who_search}</b>\n' \
                      f'–°—Ç—Ä–∞–Ω–∞: <b>{second_user.country}</b>\n' \
                      f'–ì–æ—Ä–æ–¥: <b>{second_user.city}</b>\n' \
                      f'–û —Å–µ–±–µ: <b>{second_user.about_yourself}</b>\n' \
                      f'–•–æ–±–±–∏: <b>{second_user.hobby}</b>\n' \
                      f'–í –∫–∞–∫–∏–µ –∏–≥—Ä—ã –∏–≥—Ä–∞—é: <b>{games}</b>'

            await message.answer('–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:')

            if second_user.photo == 'None':
                await message.answer(text=text_ru)
            else:
                await message.answer_photo(photo=second_user.photo, caption=text_ru)

            await message.answer(text='1. –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ\n'
                                      '2. –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ\n'
                                      '3. –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –∞–Ω–∫–µ—Ç—ã\n'
                                      '4. –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã', reply_markup=menu_my_profile_keyboard)

        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
        else:
            text_en = f'Name: <b>{second_user.name}</b>\n' \
                      f'Age: <b>{second_user.age}</b>\n' \
                      f'Gender: <b>{second_user.gender}</b>\n' \
                      f'Search: <b>{second_user.purpose}</b>\n' \
                      f'Who search: <b>{second_user.who_search}</b>\n' \
                      f'Country: <b>{second_user.country}</b>\n' \
                      f'City: <b>{second_user.city}</b>\n' \
                      f'About yourself: <b>{second_user.about_yourself}</b>\n' \
                      f'Hobby: <b>{second_user.hobby}</b>\n' \
                      f'Playing games: <b>{games}</b>'

            await message.answer('Your profile:')

            if second_user.photo == 'None':
                await message.answer(text=text_en)
            else:
                await message.answer_photo(photo=second_user.photo, caption=text_en)

            await message.answer(text='1. Edit my profile\n'
                                      '2. Change my photo\n'
                                      '3. Change profile text\n'
                                      '4. View profiles', reply_markup=menu_my_profile_keyboard)

        await state.update_data(user_=second_user)
        await state.set_state('my_profile_state')

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –≤–∞—Ä–∏–∞–Ω—Ç 3 "–Ø –±–æ–ª—å—à–µ –Ω–µ —Ö–æ—á—É –Ω–∏–∫–æ–≥–æ –∏—Å–∫–∞—Ç—å"
    elif option == '3':
        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –†—É—Å—Å–∫–∏–π
        if language_second_user == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            text_ru = '–¢–∞–∫ —Ç—ã –Ω–µ —É–∑–Ω–∞–µ—à—å, —á—Ç–æ –∫–æ–º—É-—Ç–æ –Ω—Ä–∞–≤–∏—à—å—Å—è... –¢–æ—á–Ω–æ —Ö–æ—á–µ—à—å –æ—Ç–∫–ª—é—á–∏—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É?\n\n' \
                      '1. –î–∞, –æ—Ç–∫–ª—é—á–∏—Ç—å –∞–Ω–∫–µ—Ç—É.\n' \
                      '2. –ù–µ—Ç, –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥.'

            await message.answer(text=text_ru, reply_markup=ReplyKeyboardMarkup(keyboard=[
                [
                    KeyboardButton(text='1'),
                    KeyboardButton(text='2')
                ]
            ], resize_keyboard=True, one_time_keyboard=True))

        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
        else:
            text_en = "That way you won't know that someone likes you... " \
                      "Are you sure you want to disable your profile?\n\n" \
                      "1. Yes, disable the profile.\n" \
                      "2. No, go back."

            await message.answer(text=text_en, reply_markup=ReplyKeyboardMarkup(keyboard=[
                [
                    KeyboardButton(text='1'),
                    KeyboardButton(text='2')
                ]
            ], resize_keyboard=True, one_time_keyboard=True))

        await state.set_state('disable_second_profile')

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤—ã–±—Ä–∞–ª –≤–∞—Ä–∏–∞–Ω—Ç, –∞ —á—Ç–æ-—Ç–æ –Ω–∞–ø–∏—Å–∞–ª
    else:
        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –†—É—Å—Å–∫–∏–π
        if language_second_user == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            await message.answer('–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞')

        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
        else:
            await message.answer('There is no such answer option')
