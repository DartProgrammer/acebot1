from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

from keyboards.inline.gaming_keyboards import profile_action_target_keyboard, menu_my_profile_keyboard
from loader import dp, _
from utils.db_api import models


# –°—é–¥–∞ –ø–æ–ø–∞–¥–∞–µ–º, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "zzz"
@dp.message_handler(state='zzz')
async def handler_zzz(message: types.Message, state: FSMContext):
    data = await state.get_data()
    user: models.User = data.get('user_')
    language = data.get('language')
    option = message.text
    current_profile_number = data.get('current_profile_number')
    current_profile: models.User = data.get('current_profile')
    photo = user.photo
    game1 = user.game1
    game2 = user.game2

    if game1 == '' and game2 == '':
        games = f'{game1}, {game2}'
    elif game2 == '':
        games = f'{game1}'
    elif game1 == '':
        games = f'{game2}'
    else:
        games = ''

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –≤–∞—Ä–∏–∞–Ω—Ç 1 "–°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã"
    if option == '1 üîé':
        text = _('{current_profile.name}, {current_profile.age} –∏–∑ {current_profile.country}\n'
                 '–•–æ–±–±–∏: <b>{current_profile.hobby}</b>\n'
                 '–û —Å–µ–±–µ: <b>{current_profile.about_yourself}</b>\n'
                 '–ò–≥—Ä–∞–µ—Ç –≤ –∏–≥—Ä—ã: <b>{games}</b>').format(current_profile=current_profile, games=games)

        if current_profile.photo == 'None':
            await message.answer(text=text, reply_markup=profile_action_target_keyboard)
        else:
            await message.answer_photo(photo=current_profile.photo, caption=text,
                                       reply_markup=profile_action_target_keyboard)

        await state.update_data(current_profile_number=current_profile_number)

        await state.set_state('find_profiles')

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –≤–∞—Ä–∏–∞–Ω—Ç 2 "–ú–æ—è –∞–Ω–∫–µ—Ç–∞"
    elif option == '2':
        text = _('–ò–º—è: <b>{user.name}</b>\n'
                 '–í–æ–∑—Ä–∞—Å—Ç: <b>{user.age}</b>\n'
                 '–ü–æ–ª: <b>{user.gender}</b>\n'
                 '–ò—â—É: <b>{user.purpose}</b>\n'
                 '–ö–æ–≥–æ –∏—â—É: <b>{user.who_search}</b>\n'
                 '–°—Ç—Ä–∞–Ω–∞: <b>{user.country}</b>\n'
                 '–ì–æ—Ä–æ–¥: <b>{user.city}</b>\n'
                 '–û —Å–µ–±–µ: <b>{user.about_yourself}</b>\n'
                 '–•–æ–±–±–∏: <b>{user.hobby}</b>\n'
                 '–í –∫–∞–∫–∏–µ –∏–≥—Ä—ã –∏–≥—Ä–∞—é: <b>{games}</b>').format(user=user, games=games)

        await message.answer(_('–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:'))
        if photo == 'None':
            await message.answer(text=text)
        else:
            await message.answer_photo(photo=user.photo, caption=text)

        await message.answer(text=_('1. –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ\n'
                                    '2. –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ\n'
                                    '3. –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –∞–Ω–∫–µ—Ç—ã\n'
                                    '4. –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã'), reply_markup=menu_my_profile_keyboard)

        await state.set_state('my_profile_state')

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –≤–∞—Ä–∏–∞–Ω—Ç 3 "–Ø –±–æ–ª—å—à–µ –Ω–µ —Ö–æ—á—É –Ω–∏–∫–æ–≥–æ –∏—Å–∫–∞—Ç—å"
    elif option == '3':
        text_ru = _('–¢–∞–∫ —Ç—ã –Ω–µ —É–∑–Ω–∞–µ—à—å, —á—Ç–æ –∫–æ–º—É-—Ç–æ –Ω—Ä–∞–≤–∏—à—å—Å—è... –¢–æ—á–Ω–æ —Ö–æ—á–µ—à—å –æ—Ç–∫–ª—é—á–∏—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É?\n\n'
                    '1. –î–∞, –æ—Ç–∫–ª—é—á–∏—Ç—å –∞–Ω–∫–µ—Ç—É.\n'
                    '2. –ù–µ—Ç, –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥.')

        await message.answer(text=text_ru, reply_markup=ReplyKeyboardMarkup(keyboard=[
            [
                KeyboardButton(text='1'),
                KeyboardButton(text='2')
            ]
        ], resize_keyboard=True, one_time_keyboard=True))

        await state.set_state('disable_profile')

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤—ã–±—Ä–∞–ª –≤–∞—Ä–∏–∞–Ω—Ç, –∞ —á—Ç–æ-—Ç–æ –Ω–∞–ø–∏—Å–∞–ª
    else:
        await message.answer(_('–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞'))
