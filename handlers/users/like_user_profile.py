from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

from keyboards.inline.gaming_keyboards import profile_action_target_keyboard
from keyboards.inline.gaming_keyboards import ru_button
from loader import dp, bot, db
from utils.db_api import models


# –ó–¥–µ—Å—å –ª–æ–≤–∏–º –¥–µ–π—Å—Ç–≤–∏—è —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 2, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1 –ø–æ—Å—Ç–∞–≤–∏–ª –ª–∞–π–∫

# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª üëç (–ü–æ–∫–∞–∑–∞—Ç—å)
@dp.message_handler(text='üëç', state='in_like')
async def show_users_profiles(message: types.Message, state: FSMContext):
    second_user_id = message.from_user.id
    second_user: models.User = await db.get_user(second_user_id)
    language_second_user = second_user.language

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –ª–∞–π–∫–Ω—É–ª–∏ –∞–Ω–∫–µ—Ç—É
    all_users_liked = await db.get_users_liked_my_profile(second_user_id)
    current_profile_liked_number = 0
    count_users_liked = len(all_users_liked)
    current_profile: models.User = all_users_liked[current_profile_liked_number]
    count_users_liked_for_text = count_users_liked - 1
    current_profile_liked: models.LikeProfiles = all_users_liked[current_profile_liked_number]

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫ "–ü—Ä–æ—á–∏—Ç–∞–Ω–æ"
    await db.setting_the_attribute_read_like_profiles(current_profile_liked[0])

    await state.update_data(second_user=second_user,
                            all_users_liked=all_users_liked,
                            count_users_liked=count_users_liked,
                            current_profile_liked_number=current_profile_liked_number,
                            count_users_liked_for_text=count_users_liked_for_text)

    photo = current_profile.photo
    game1 = current_profile.game1
    game2 = current_profile.game2

    if game1 is not None and game2 is not None:
        games = f'{game1}, {game2}'
    elif game2 is None:
        games = f'{game1}'
    elif game1 is None:
        games = f'{game2}'
    else:
        games = ''

    if language_second_user == ru_button.text:
        # –ò–∑–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ª–∞–π–∫–æ–≤
        if count_users_liked == 1:
            text = f'–ö–æ–º—É-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞:\n\n' \
                   f'{current_profile.name}, {current_profile.age} –∏–∑ {current_profile.country}\n' \
                   f'–•–æ–±–±–∏: <b>{current_profile.hobby}</b>\n' \
                   f'–û —Å–µ–±–µ: <b>{current_profile.about_yourself}</b>\n' \
                   f'–ò–≥—Ä–∞–µ—Ç –≤ –∏–≥—Ä—ã: <b>{games}</b>'

        else:
            text = f'–ö–æ–º—É-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞ (–∏ –µ—â—ë {count_users_liked_for_text})\n\n' \
                   f'{current_profile.name}, {current_profile.age} –∏–∑ {current_profile.country}\n' \
                   f'–•–æ–±–±–∏: <b>{current_profile.hobby}</b>\n' \
                   f'–û —Å–µ–±–µ: <b>{current_profile.about_yourself}</b>\n' \
                   f'–ò–≥—Ä–∞–µ—Ç –≤ –∏–≥—Ä—ã: <b>{games}</b>'

    else:
        if count_users_liked == 1:
            text = f'Someone liked your profile:\n\n' \
                   f'{current_profile.name}, {current_profile.age} from {current_profile.country}\n' \
                   f'Hobby: <b>{current_profile.hobby}</b>\n' \
                   f'About: <b>{current_profile.about_yourself}</b>\n' \
                   f'Games: <b>{games}</b>'
        else:
            text = f'Someone liked your profile (and more {count_users_liked_for_text})\n\n' \
                   f'{current_profile.name}, {current_profile.age} from {current_profile.country}\n' \
                   f'Hobby: <b>{current_profile.hobby}</b>\n' \
                   f'About: <b>{current_profile.about_yourself}</b>\n' \
                   f'Games: <b>{games}</b>'

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ —Ñ–æ—Ç–æ
    if photo == 'None':
        await message.answer(text=text, reply_markup=profile_action_target_keyboard)

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ñ–æ—Ç–æ
    else:
        await message.answer_photo(photo=photo, caption=text, reply_markup=profile_action_target_keyboard)


# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª üí§ (–ù–µ —Ö–æ—á—É –±–æ–ª—å—à–µ –Ω–∏–∫–æ–≥–æ —Å–º–æ—Ç—Ä–µ—Ç—å)
@dp.message_handler(text='üí§', state='in_like')
async def not_show_users_profiles(message: types.Message, state: FSMContext):
    second_user_id = message.from_user.id
    second_user: models.User = await db.get_user(second_user_id)
    language = second_user.language
    await state.update_data(second_user=second_user)

    if language == ru_button.text:
        text = '–¢–∞–∫ —Ç—ã –Ω–µ —É–∑–Ω–∞–µ—à—å, —á—Ç–æ –∫–æ–º—É-—Ç–æ –Ω—Ä–∞–≤–∏—à—å—Å—è... ' \
               '–¢–æ—á–Ω–æ —Ö–æ—á–µ—à—å –æ—Ç–∫–ª—é—á–∏—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É?\n\n' \
               '1. –î–∞, –æ—Ç–∫–ª—é—á–∏—Ç—å –∞–Ω–∫–µ—Ç—É.\n' \
               '2. –ù–µ—Ç, –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥.'
    else:
        text = "That way you won't know that someone likes you... " \
               "Are you sure you want to disable your profile?\n\n" \
               "1. Yes, disable the profile.\n" \
               "2. No, go back."

    await message.answer(text=text, reply_markup=ReplyKeyboardMarkup(keyboard=[
        [
            KeyboardButton(text='1'),
            KeyboardButton(text='2')
        ]
    ], resize_keyboard=True, one_time_keyboard=True))

    await state.set_state('disable_second_profile')


# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2 –Ω–∞–∂–∞–ª üíó
@dp.message_handler(text='üíó', state='in_like')
async def like_user_profile(message: types.Message, state: FSMContext):
    data = await state.get_data()

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    second_user: models.User = data.get('second_user')
    # user_link = f'<a href="tg://user?id={second_user.user_id}">{second_user.name}</a>'
    user_link_username = f'<a href="https://t.me/{second_user.username}">{second_user.name}</a>'
    user_language = second_user.language

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –Ω–∞–π–¥–µ–Ω–Ω—ã–º –ø—Ä–æ—Ñ–∏–ª—è–º
    all_users_liked = data.get('all_users_liked')
    count_users_liked = data.get('count_users_liked')
    current_profile_liked_number = data.get('current_profile_liked_number')
    count_users_liked_for_text = data.get('count_users_liked_for_text')
    current_profile: models.User = all_users_liked[current_profile_liked_number]
    current_profile_user_id = current_profile[1]
    # user_liked_link = f'<a href="tg://user?id={current_profile_user_id}">{current_profile.name}</a>'
    user_liked_link_username = f'<a href="https://t.me/{current_profile.username}">{current_profile.name}</a>'
    language_current_profile = current_profile.language

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∑–∞–∏–º–Ω–æ–π —Å–∏–º–ø–∞—Ç–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é 2
    if user_language == ru_button.text:
        # await message.answer(f'–ï—Å—Ç—å –≤–∑–∞–∏–º–Ω–∞—è —Å–∏–º–ø–∞—Ç–∏—è! –ù–∞—á–∏–Ω–∞–π –æ–±—â–∞—Ç—å—Å—è üëâ {user_liked_link}')
        await message.answer(f'–ï—Å—Ç—å –≤–∑–∞–∏–º–Ω–∞—è —Å–∏–º–ø–∞—Ç–∏—è! –ù–∞—á–∏–Ω–∞–π –æ–±—â–∞—Ç—å—Å—è üëâ {user_liked_link_username}',
                             disable_web_page_preview=True)
    else:
        # await message.answer(f'There is mutual sympathy! Start chatting üëâ {user_liked_link}')
        await message.answer(f'There is mutual sympathy! Start chatting üëâ {user_liked_link_username}',
                             disable_web_page_preview=True)

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ —Ñ–æ—Ç–æ
    if current_profile.photo == 'None':
        await message.answer(text=f'{current_profile.name}, {current_profile.age}, '
                                  f'{current_profile.city} - {current_profile.about_yourself}')

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ñ–æ—Ç–æ
    else:
        await message.answer_photo(photo=current_profile.photo,
                                   caption=f'{current_profile.name}, {current_profile.age}, '
                                           f'{current_profile.city} - {current_profile.about_yourself}')

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∑–∞–∏–º–Ω–æ–π —Å–∏–º–ø–∞—Ç–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é 1
    if language_current_profile == ru_button.text:
        # await bot.send_message(chat_id=f'{current_profile_user_id}',
        #                        text=f'–ï—Å—Ç—å –≤–∑–∞–∏–º–Ω–∞—è —Å–∏–º–ø–∞—Ç–∏—è! –ù–∞—á–∏–Ω–∞–π –æ–±—â–∞—Ç—å—Å—è üëâ {user_link}')
        await bot.send_message(chat_id=f'{current_profile_user_id}',
                               text=f'–ï—Å—Ç—å –≤–∑–∞–∏–º–Ω–∞—è —Å–∏–º–ø–∞—Ç–∏—è! –ù–∞—á–∏–Ω–∞–π –æ–±—â–∞—Ç—å—Å—è üëâ {user_link_username}',
                               disable_web_page_preview=True)
    else:
        # await bot.send_message(chat_id=f'{current_profile_user_id}',
        #                        text=f'There is mutual sympathy! Start chatting üëâ {user_link}')
        await bot.send_message(chat_id=f'{current_profile_user_id}',
                               text=f'There is mutual sympathy! Start chatting üëâ {user_link_username}',
                               disable_web_page_preview=True)

    await bot.send_photo(chat_id=f'{current_profile_user_id}', photo=f'{second_user.photo}',
                         caption=f'{second_user.name}, {second_user.age}, {second_user.city} - '
                                 f'{second_user.about_yourself}')

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–º –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –∞–Ω–∫–µ—Ç–∞
    if current_profile_liked_number + 1 < count_users_liked:
        current_profile: models.User = all_users_liked[current_profile_liked_number + 1]

        photo = current_profile.photo
        game1 = current_profile.game1
        game2 = current_profile.game2

        if game1 is not None and game2 is not None:
            games = f'{game1}, {game2}'
        elif game2 is None:
            games = f'{game1}'
        elif game1 is None:
            games = f'{game2}'
        else:
            games = ''

        if user_language == ru_button.text:
            # –ò–∑–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ª–∞–π–∫–æ–≤
            if count_users_liked_for_text == 1:
                text = f'–ö–æ–º—É-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞:\n\n' \
                       f'{current_profile.name}, {current_profile.age} –∏–∑ {current_profile.country}\n' \
                       f'–•–æ–±–±–∏: <b>{current_profile.hobby}</b>\n' \
                       f'–û —Å–µ–±–µ: <b>{current_profile.about_yourself}</b>\n' \
                       f'–ò–≥—Ä–∞–µ—Ç –≤ –∏–≥—Ä—ã: <b>{games}</b>'
            else:
                text = f'–ö–æ–º—É-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞ (–∏ –µ—â—ë {count_users_liked_for_text})\n\n' \
                       f'{current_profile.name}, {current_profile.age} –∏–∑ {current_profile.country}\n' \
                       f'–•–æ–±–±–∏: <b>{current_profile.hobby}</b>\n' \
                       f'–û —Å–µ–±–µ: <b>{current_profile.about_yourself}</b>\n' \
                       f'–ò–≥—Ä–∞–µ—Ç –≤ –∏–≥—Ä—ã: <b>{games}</b>'

        else:
            if count_users_liked_for_text == 1:
                text = f'Someone liked your profile:\n\n' \
                       f'{current_profile.name}, {current_profile.age} from {current_profile.country}\n' \
                       f'Hobby: <b>{current_profile.hobby}</b>\n' \
                       f'About: <b>{current_profile.about_yourself}</b>\n' \
                       f'Games: <b>{games}</b>'
            else:
                text = f'Someone liked your profile (and more {count_users_liked_for_text})\n\n' \
                       f'{current_profile.name}, {current_profile.age} from {current_profile.country}\n' \
                       f'Hobby: <b>{current_profile.hobby}</b>\n' \
                       f'About: <b>{current_profile.about_yourself}</b>\n' \
                       f'Games: <b>{games}</b>'

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ —Ñ–æ—Ç–æ
        if photo == 'None':
            await message.answer(text=text, reply_markup=profile_action_target_keyboard)

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ñ–æ—Ç–æ
        else:
            await message.answer_photo(photo=photo, caption=text, reply_markup=profile_action_target_keyboard)

        await state.update_data(current_profile_liked_number=current_profile_liked_number + 1)

    # –°—é–¥–∞ –ø–æ–ø–∞–¥–∞–µ–º, –∫–æ–≥–¥–∞ –ø–æ–∫–∞–∑–∞–ª–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–º –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –∞–Ω–∫–µ—Ç–∞
    else:
        if user_language == ru_button.text:
            await message.answer(f'–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –±–æ–ª—å—à–µ –ª–∞–π–∫–æ–≤ ‚ù§Ô∏è\n'
                                 f'–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª‚úÖ',
                                 reply_markup=ReplyKeyboardMarkup(keyboard=[
                                     [
                                         KeyboardButton(text='–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä –∞–Ω–∫–µ—Ç')
                                     ]
                                 ], resize_keyboard=True, one_time_keyboard=True))
        else:
            await message.answer(f'To get more likes ‚ù§Ô∏è\n'
                                 f'Subscribe to the channel Link ‚úÖ',
                                 reply_markup=ReplyKeyboardMarkup(keyboard=[
                                     [
                                         KeyboardButton(text='Continue viewing profiles')
                                     ]
                                 ], resize_keyboard=True, one_time_keyboard=True))

        await state.set_state('continue_viewing_profiles')


# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2 –Ω–∞–∂–∞–ª üíå
@dp.message_handler(text='üíå', state='in_like')
async def send_message_profile(message: types.Message, state: FSMContext):
    data = await state.get_data()

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    second_user: models.User = data.get('second_user')
    user_language = second_user.language

    if user_language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
        await message.answer('–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å')
    else:
        await message.answer('Write the message you want to send')

    await state.set_state('in_like_wait_answer')


# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2 –Ω–∞–∂–∞–ª üëé
@dp.message_handler(text='üëé', state='in_like')
async def dislike_user_profile(message: types.Message, state: FSMContext):
    data = await state.get_data()

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    second_user: models.User = data.get('second_user')
    user_language = second_user.language

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –Ω–∞–π–¥–µ–Ω–Ω—ã–º –ø—Ä–æ—Ñ–∏–ª—è–º
    all_users_liked = data.get('all_users_liked')
    count_users_liked = data.get('count_users_liked')
    current_profile_liked_number = data.get('current_profile_liked_number')
    count_users_liked_for_text = data.get('count_users_liked_for_text')

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–º –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –∞–Ω–∫–µ—Ç–∞
    if current_profile_liked_number + 1 < count_users_liked:
        current_profile: models.User = all_users_liked[current_profile_liked_number + 1]

        photo = current_profile.photo
        game1 = current_profile.game1
        game2 = current_profile.game2

        if game1 is not None and game2 is not None:
            games = f'{game1}, {game2}'
        elif game2 is None:
            games = f'{game1}'
        elif game1 is None:
            games = f'{game2}'
        else:
            games = ''

        if user_language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            # –ò–∑–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ª–∞–π–∫–æ–≤
            if count_users_liked_for_text == 1:
                text = f'–ö–æ–º—É-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞:\n\n' \
                       f'{current_profile.name}, {current_profile.age} –∏–∑ {current_profile.country}\n' \
                       f'–•–æ–±–±–∏: <b>{current_profile.hobby}</b>\n' \
                       f'–û —Å–µ–±–µ: <b>{current_profile.about_yourself}</b>\n' \
                       f'–ò–≥—Ä–∞–µ—Ç –≤ –∏–≥—Ä—ã: <b>{games}</b>'
            else:
                text = f'–ö–æ–º—É-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞ (–∏ –µ—â—ë {count_users_liked_for_text})\n\n' \
                       f'{current_profile.name}, {current_profile.age} –∏–∑ {current_profile.country}\n' \
                       f'–•–æ–±–±–∏: <b>{current_profile.hobby}</b>\n' \
                       f'–û —Å–µ–±–µ: <b>{current_profile.about_yourself}</b>\n' \
                       f'–ò–≥—Ä–∞–µ—Ç –≤ –∏–≥—Ä—ã: <b>{games}</b>'

        else:
            if count_users_liked_for_text == 1:
                text = f'Someone liked your profile:\n\n' \
                       f'{current_profile.name}, {current_profile.age} from {current_profile.country}\n' \
                       f'Hobby: <b>{current_profile.hobby}</b>\n' \
                       f'About: <b>{current_profile.about_yourself}</b>\n' \
                       f'Games: <b>{games}</b>'
            else:
                text = f'Someone liked your profile (and more {count_users_liked_for_text})\n\n' \
                       f'{current_profile.name}, {current_profile.age} from {current_profile.country}\n' \
                       f'Hobby: <b>{current_profile.hobby}</b>\n' \
                       f'About: <b>{current_profile.about_yourself}</b>\n' \
                       f'Games: <b>{games}</b>'

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ —Ñ–æ—Ç–æ
        if photo == 'None':
            await message.answer(text=text, reply_markup=profile_action_target_keyboard)

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ñ–æ—Ç–æ
        else:
            await message.answer_photo(photo=photo, caption=text, reply_markup=profile_action_target_keyboard)

        await state.update_data(current_profile_liked_number=current_profile_liked_number + 1)

    # –°—é–¥–∞ –ø–æ–ø–∞–¥–∞–µ–º, –∫–æ–≥–¥–∞ –ø–æ–∫–∞–∑–∞–ª–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–º –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –∞–Ω–∫–µ—Ç–∞
    else:
        if user_language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            await message.answer(f'–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –±–æ–ª—å—à–µ –ª–∞–π–∫–æ–≤ ‚ù§Ô∏è\n'
                                 f'–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª‚úÖ',
                                 reply_markup=ReplyKeyboardMarkup(keyboard=[
                                     [
                                         KeyboardButton(text='–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä –∞–Ω–∫–µ—Ç')
                                     ]
                                 ], resize_keyboard=True, one_time_keyboard=True))
        else:
            await message.answer(f'To get more likes ‚ù§Ô∏è\n'
                                 f'Subscribe to the channel Link ‚úÖ',
                                 reply_markup=ReplyKeyboardMarkup(keyboard=[
                                     [
                                         KeyboardButton(text='Continue viewing profiles')
                                     ]
                                 ], resize_keyboard=True, one_time_keyboard=True))

        await state.set_state('continue_viewing_profiles')


# –°—é–¥–∞ –ø–æ–ø–∞–¥–∞–µ–º, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2 –Ω–∞–ø–∏—Å–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é 1 (–≤ –æ—Ç–≤–µ—Ç –Ω–∞ –ª–∞–π–∫)
@dp.message_handler(state='in_like_wait_answer')
async def send_answer_message(message: types.Message, state: FSMContext):
    data = await state.get_data()

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    second_user: models.User = data.get('second_user')
    user_language = second_user.language
    # second_user_link = f'<a href="tg://user?id={second_user.user_id}">{second_user.name}</a>'
    second_user_link_username = f'<a href="https://t.me/{second_user.username}">{second_user.name}</a>'
    answer_text = message.text

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –Ω–∞–π–¥–µ–Ω–Ω—ã–º –ø—Ä–æ—Ñ–∏–ª—è–º
    all_users_liked = data.get('all_users_liked')
    count_users_liked = data.get('count_users_liked')
    current_profile_liked_number = data.get('current_profile_liked_number')
    count_users_liked_for_text = data.get('count_users_liked_for_text')
    current_profile: models.User = all_users_liked[current_profile_liked_number]
    current_profile_user_id = current_profile[1]
    # user_liked_link = f'<a href="tg://user?id={current_profile_user_id}">{current_profile.name}</a>'
    user_liked_link_username = f'<a href="https://t.me/{current_profile.username}">{current_profile.name}</a>'
    language_current_profile = current_profile.language

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∑–∞–∏–º–Ω–æ–π —Å–∏–º–ø–∞—Ç–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é 2
    if user_language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
        await message.answer(f'–ï—Å—Ç—å –≤–∑–∞–∏–º–Ω–∞—è —Å–∏–º–ø–∞—Ç–∏—è! –ù–∞—á–∏–Ω–∞–π –æ–±—â–∞—Ç—å—Å—è üëâ {user_liked_link_username}',
                             disable_web_page_preview=True)
    else:
        await message.answer(f'There is mutual sympathy! Start chatting üëâ {user_liked_link_username}',
                             disable_web_page_preview=True)

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1 –±–µ–∑ —Ñ–æ—Ç–æ
    if current_profile.photo == 'None':
        await message.answer(text=f'{current_profile.name}, {current_profile.age}, '
                                  f'{current_profile.city} - {current_profile.about_yourself}')
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1 —Å —Ñ–æ—Ç–æ
    else:
        await message.answer_photo(photo=current_profile.photo,
                                   caption=f'{current_profile.name}, {current_profile.age}, '
                                           f'{current_profile.city} - {current_profile.about_yourself}')

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∑–∞–∏–º–Ω–æ–π —Å–∏–º–ø–∞—Ç–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é 1
    if language_current_profile == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
        await bot.send_message(chat_id=f'{current_profile_user_id}',
                               text=f'–ï—Å—Ç—å –≤–∑–∞–∏–º–Ω–∞—è —Å–∏–º–ø–∞—Ç–∏—è! –ù–∞—á–∏–Ω–∞–π –æ–±—â–∞—Ç—å—Å—è üëâ {second_user_link_username}',
                               disable_web_page_preview=True)
    else:
        await bot.send_message(chat_id=f'{current_profile_user_id}',
                               text=f'There is mutual sympathy! Start chatting üëâ {second_user_link_username}',
                               disable_web_page_preview=True)

    text = f'{second_user.name}, {second_user.age}, {second_user.city} - {second_user.about_yourself}\n\n{answer_text}'
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2 –±–µ–∑ —Ñ–æ—Ç–æ
    if second_user.photo == 'None':
        await bot.send_message(chat_id=f'{current_profile_user_id}', text=text)
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2 —Å —Ñ–æ—Ç–æ
    else:
        await bot.send_photo(chat_id=f'{current_profile_user_id}', photo=f'{second_user.photo}', caption=text)

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–º –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –∞–Ω–∫–µ—Ç–∞
    if current_profile_liked_number + 1 < count_users_liked:
        current_profile: models.User = all_users_liked[current_profile_liked_number + 1]

        photo = current_profile.photo
        game1 = current_profile.game1
        game2 = current_profile.game2

        if game1 is not None and game2 is not None:
            games = f'{game1}, {game2}'
        elif game2 is None:
            games = f'{game1}'
        elif game1 is None:
            games = f'{game2}'
        else:
            games = ''

        if user_language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            # –ò–∑–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ª–∞–π–∫–æ–≤
            if count_users_liked_for_text == 1:
                text = f'–ö–æ–º—É-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞:\n\n' \
                       f'{current_profile.name}, {current_profile.age} –∏–∑ {current_profile.country}\n' \
                       f'–•–æ–±–±–∏: <b>{current_profile.hobby}</b>\n' \
                       f'–û —Å–µ–±–µ: <b>{current_profile.about_yourself}</b>\n' \
                       f'–ò–≥—Ä–∞–µ—Ç –≤ –∏–≥—Ä—ã: <b>{games}</b>'
            else:
                text = f'–ö–æ–º—É-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞ (–∏ –µ—â—ë {count_users_liked_for_text})\n\n' \
                       f'{current_profile.name}, {current_profile.age} –∏–∑ {current_profile.country}\n' \
                       f'–•–æ–±–±–∏: <b>{current_profile.hobby}</b>\n' \
                       f'–û —Å–µ–±–µ: <b>{current_profile.about_yourself}</b>\n' \
                       f'–ò–≥—Ä–∞–µ—Ç –≤ –∏–≥—Ä—ã: <b>{games}</b>'

        else:
            if count_users_liked_for_text == 1:
                text = f'Someone liked your profile:\n\n' \
                       f'{current_profile.name}, {current_profile.age} from {current_profile.country}\n' \
                       f'Hobby: <b>{current_profile.hobby}</b>\n' \
                       f'About: <b>{current_profile.about_yourself}</b>\n' \
                       f'Games: <b>{games}</b>'
            else:
                text = f'Someone liked your profile (and more {count_users_liked_for_text})\n\n' \
                       f'{current_profile.name}, {current_profile.age} from {current_profile.country}\n' \
                       f'Hobby: <b>{current_profile.hobby}</b>\n' \
                       f'About: <b>{current_profile.about_yourself}</b>\n' \
                       f'Games: <b>{games}</b>'

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ —Ñ–æ—Ç–æ
        if photo == 'None':
            await message.answer(text=text, reply_markup=profile_action_target_keyboard)

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ñ–æ—Ç–æ
        else:
            await message.answer_photo(photo=photo, caption=text, reply_markup=profile_action_target_keyboard)

        await state.update_data(current_profile_liked_number=current_profile_liked_number + 1)

        await state.set_state('in_like')

    # –°—é–¥–∞ –ø–æ–ø–∞–¥–∞–µ–º, –∫–æ–≥–¥–∞ –ø–æ–∫–∞–∑–∞–ª–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–º –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –∞–Ω–∫–µ—Ç–∞
    else:
        if user_language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            await message.answer(f'–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –±–æ–ª—å—à–µ –ª–∞–π–∫–æ–≤ ‚ù§Ô∏è\n'
                                 f'–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª‚úÖ',
                                 reply_markup=ReplyKeyboardMarkup(keyboard=[
                                     [
                                         KeyboardButton(text='–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä –∞–Ω–∫–µ—Ç')
                                     ]
                                 ], resize_keyboard=True, one_time_keyboard=True))
        else:
            await message.answer(f'To get more likes ‚ù§Ô∏è\n'
                                 f'Subscribe to the channel Link ‚úÖ',
                                 reply_markup=ReplyKeyboardMarkup(keyboard=[
                                     [
                                         KeyboardButton(text='Continue viewing profiles')
                                     ]
                                 ], resize_keyboard=True, one_time_keyboard=True))

        await state.set_state('continue_viewing_profiles')
