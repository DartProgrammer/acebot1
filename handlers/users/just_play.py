from aiogram import types
from aiogram.dispatcher import FSMContext, filters
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

from handlers.users.start import db
from keyboards.inline.gaming_keyboards import show_gender_keyboard, \
    get_level_of_play_keyboard, show_correct_profile_keyboard, menu_my_profile_keyboard
from loader import dp
from utils import photo_link
from utils.db_api.models import User


# –°—é–¥–∞ –ø–æ–ø–∞–¥–∞–µ–º, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª "–ü—Ä–æ—Å—Ç–æ –ø–æ–∏–≥—Ä–∞—Ç—å"
@dp.message_handler(state='just_play')
async def purpose_search_handler(message: types.Message, state: FSMContext):
    data = await state.get_data()
    language = data.get('language')
    countries = message.text

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª "–°—Ç—Ä–∞–Ω—ã –°–ù–ì"
    if countries in ['–°—Ç—Ä–∞–Ω—ã –°–ù–ì', 'CIS countries']:
        await state.update_data(country='–†–æ—Å—Å–∏—è, –ë–µ–ª–æ—Ä—É—Å—Å–∏—è, –£–∫—Ä–∞–∏–Ω–∞')

        if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            await message.answer('–¢—ã –ø–∞—Ä–µ–Ω—å –∏–ª–∏ –¥–µ–≤—É—à–∫–∞?', reply_markup=show_gender_keyboard(language))
        else:
            await message.answer('Are you a guy or a girl?', reply_markup=show_gender_keyboard(language))

        await state.set_state('gender_just_play')

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª "–í—Å–µ —Å—Ç—Ä–∞–Ω—ã"
    elif countries in ['–í—Å–µ —Å—Ç—Ä–∞–Ω—ã', 'All countries']:

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω
        all_countries = await db.get_all_countries()

        country_keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)

        for country in all_countries:
            country_btn = KeyboardButton(text=f'{country[0]}')
            country_keyboard.add(country_btn)

        if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –∏–∑ —Å–ø–∏—Å–∫–∞', reply_markup=country_keyboard)
        else:
            await message.answer('Choose a country from the list', reply_markup=country_keyboard)

        await state.set_state('country_just_play')

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤—ã–±—Ä–∞–ª –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –∞ –Ω–∞–ø–∏—Å–∞–ª —Ç–µ–∫—Å—Ç
    else:
        if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            await message.answer('–ù–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –≤–∞—Ä–∏–∞–Ω—Ç, –ø—Ä–æ—Å—å–±–∞ –Ω–∞–∂–∞—Ç—å –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã!')
        else:
            await message.answer('I do not know such an option, please click on one of the keyboard buttons!')


# –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω—É, –∫–æ—Ç–æ—Ä—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –∏–∑ —Å–ø–∏—Å–∫–∞
@dp.message_handler(state='country_just_play')
async def get_country_just_play(message: types.Message, state: FSMContext):
    data = await state.get_data()
    language = data.get('language')

    country = message.text
    await state.update_data(country=country)

    if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
        await message.answer('–¢—ã –ø–∞—Ä–µ–Ω—å –∏–ª–∏ –¥–µ–≤—É—à–∫–∞?', reply_markup=show_gender_keyboard(language))
    else:
        await message.answer('Are you a guy or a girl?', reply_markup=show_gender_keyboard(language))

    await state.set_state('gender_just_play')


# –£–∑–Ω–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ–≥–æ —É—Ä–æ–≤–µ–Ω—å –∏–≥—Ä—ã
@dp.message_handler(state='gender_just_play')
async def get_level_of_play(message: types.Message, state: FSMContext):
    data = await state.get_data()
    language = data.get('language')

    gender = message.text
    await state.update_data(gender=gender)

    if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
        await message.answer('–í–∞—à —É—Ä–æ–≤–µ–Ω—å –∏–≥—Ä—ã?', reply_markup=get_level_of_play_keyboard(language))
    else:
        await message.answer('Your level of play?', reply_markup=get_level_of_play_keyboard(language))

    await state.set_state('level_of_play')


# –£–∑–Ω–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ–≥–æ –ö/–î
@dp.message_handler(state='level_of_play', content_types=types.ContentTypes.ANY)
async def get_cool_down(message: types.Message, state: FSMContext):
    data = await state.get_data()
    language = data.get('language')

    play_level = message.text

    try:
        if play_level in ['–ù–æ–≤–∏—á–æ–∫', '–°—Ä–µ–¥–Ω–∏–π', '–í—ã—Å–æ–∫–∏–π', '–ö–∏–±–µ—Ä—Å–ø–æ—Ä—Ç', 'Beginner', 'Average', 'High', 'Cybersport']:
            await state.update_data(play_level=play_level)

        else:
            if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
                await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞')
            else:
                await message.answer('Choose an option from the list')
            return

    except TypeError:
        pass

    if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
        await message.answer('–í–∞—à–µ –ö/–î??')
    else:
        await message.answer('Your cool down?')

    await state.set_state('cool_down')


# –£–∑–Ω–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
@dp.message_handler(state='cool_down')
async def get_something_from_yourself(message: types.Message, state: FSMContext):
    data = await state.get_data()
    language = data.get('language')

    try:
        cool_down = float(message.text)

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª —Ç–µ–∫—Å—Ç
    except ValueError:
        if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            await message.answer('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ')
        else:
            await message.answer('Enter an integer')
        return

    await state.update_data(cool_down=cool_down)

    if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
        await message.answer('–ß—Ç–æ-—Ç–æ –æ—Ç —Å–µ–±—è?')
    else:
        await message.answer('Something from yourself?')

    await state.set_state('something_from_yourself')


# –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ–≥–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
@dp.message_handler(state='something_from_yourself')
async def get_photo(message: types.Message, state: FSMContext):
    data = await state.get_data()
    language = data.get('language')
    about_yourself = message.text
    await state.update_data(about_yourself=about_yourself)

    if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
        await message.answer('–ü—Ä–∏—à–ª–∏ –ª—é–±—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é (–Ω–µ —Ñ–∞–π–ª), –µ—Å–ª–∏ —Ö–æ—á–µ—à—å!',
                             reply_markup=ReplyKeyboardMarkup(keyboard=[
                                 [
                                     KeyboardButton(text='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å')
                                 ]
                             ], resize_keyboard=True, one_time_keyboard=True))
    else:
        await message.answer('Send any photo (not file) if you want!',
                             reply_markup=ReplyKeyboardMarkup(keyboard=[
                                 [
                                     KeyboardButton(text='Skip')
                                 ]
                             ], resize_keyboard=True, one_time_keyboard=True))

    await state.set_state('photo_just_play')


# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—å
@dp.message_handler(state='photo_just_play', content_types=types.ContentTypes.ANY)
async def add_profile_just_play(message: types.Message, state: FSMContext):
    data = await state.get_data()
    language = data.get('language')

    age = data.get('age')
    gender = data.get('gender')
    purpose = data.get('purpose')
    country = data.get('country')
    play_level = data.get('play_level')
    cool_down = data.get('cool_down')
    about_yourself = data.get('about_yourself')
    game1 = data.get('game1')
    game2 = data.get('game2')

    if game1 is not None and game2 is not None:
        games = f'{game1}, {game2}'
    elif game2 is None:
        games = f'{game1}'
    elif game1 is None:
        games = f'{game2}'
    else:
        games = ''

    text_ru = f'–í–æ—Ç —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:\n\n' \
              f'–í–æ–∑—Ä–∞—Å—Ç: <b>{age}</b>\n' \
              f'–ü–æ–ª: <b>{gender}</b>\n' \
              f'–¶–µ–ª—å: <b>{purpose}</b>\n' \
              f'–°—Ç—Ä–∞–Ω–∞ –ø–æ–∏—Å–∫–∞: <b>{country}</b>\n' \
              f'–û —Å–µ–±–µ: <b>{about_yourself}</b>\n' \
              f'–í –∫–∞–∫–∏–µ –∏–≥—Ä—ã –∏–≥—Ä–∞—é: <b>{games}</b>\n' \
              f'–£—Ä–æ–≤–µ–Ω—å –∏–≥—Ä—ã: <b>{play_level}</b>\n' \
              f'–í–∞—à –ö/–î: <b>{cool_down}</b>\n\n' \
              f'–í—Å–µ –≤–µ—Ä–Ω–æ?'

    text_en = f'Here is your profile:\n\n' \
              f'Age: <b>{age}</b>\n' \
              f'Gender: <b>{gender}</b>\n' \
              f'Purpose: <b>{purpose}</b>\n' \
              f'Country teammates: <b>{country}</b>\n' \
              f'About yourself: <b>{about_yourself}</b>\n' \
              f'Playing games: <b>{games}</b>\n' \
              f'Level of play: <b>{play_level}</b>\n' \
              f'Your cool down: <b>{cool_down}</b>\n\n' \
              f'Is that right?'

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—Ç–∞–ª –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ñ–æ—Ç–æ, –∞ –Ω–∞–∂–∞–ª "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"
    if message.text in ['–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', 'Skip']:
        if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            await message.answer(text=text_ru, reply_markup=show_correct_profile_keyboard(language))
        else:
            await message.answer(text=text_ru, reply_markup=show_correct_profile_keyboard(language))

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ
    else:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–ª–∞–ª —Ñ–æ—Ç–æ, –∞ –Ω–µ —Ñ–∞–π–ª
        try:
            photo = message.photo[-1]

        except IndexError:
            if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
                await message.answer('–ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ, –Ω–µ —Ñ–∞–π–ª!')
                return
            else:
                await message.answer('Send a photo, not a file!')
                return

        link = await photo_link(photo)
        await state.update_data(photo=link)

        if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            await message.answer_photo(photo=link, caption=text_ru,
                                       reply_markup=show_correct_profile_keyboard(language))
        else:
            await message.answer_photo(photo=link, caption=text_en,
                                       reply_markup=show_correct_profile_keyboard(language))

    await state.set_state('check_profile_just_play')


# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
@dp.message_handler(filters.Text(startswith=['–î–∞', 'Yes'], ignore_case=True), state='check_profile_just_play')
async def correct_profile_just_play(message: types.Message, state: FSMContext):
    data = await state.get_data()
    user_id = data.get('user_id')
    user: User = await db.get_user(user_id)
    language = data.get('language')

    age = data.get('age')
    gender = data.get('gender')
    purpose = data.get('purpose')
    country = data.get('country')
    play_level = data.get('play_level')
    cool_down = data.get('cool_down')
    about_yourself = data.get('about_yourself')
    game1 = data.get('game1')
    game2 = data.get('game2')
    photo = data.get('photo')

    if game1 is not None and game2 is not None:
        games = f'{game1}, {game2}'
    elif game2 is None:
        games = f'{game1}'
    elif game1 is None:
        games = f'{game2}'
    else:
        games = ''

    await user.update(
        game1=game1,
        game2=game2,
        age=age,
        gender=gender,
        purpose=purpose,
        country=country,
        play_level=play_level,
        cool_down=cool_down,
        about_yourself=about_yourself,
        photo=str(photo)
    ).apply()

    text_ru = f'–í–æ—Ç —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:\n\n' \
              f'–í–æ–∑—Ä–∞—Å—Ç: <b>{age}</b>\n' \
              f'–ü–æ–ª: <b>{gender}</b>\n' \
              f'–¶–µ–ª—å: <b>{purpose}</b>\n' \
              f'–°—Ç—Ä–∞–Ω–∞ –ø–æ–∏—Å–∫–∞: <b>{country}</b>\n' \
              f'–û —Å–µ–±–µ: <b>{about_yourself}</b>\n' \
              f'–í –∫–∞–∫–∏–µ –∏–≥—Ä—ã –∏–≥—Ä–∞—é: <b>{games}</b>\n' \
              f'–£—Ä–æ–≤–µ–Ω—å –∏–≥—Ä—ã: <b>{play_level}</b>\n' \
              f'–í–∞—à –ö/–î: <b>{cool_down}</b>'

    text_en = f'Here is your profile:\n\n' \
              f'Age: <b>{age}</b>\n' \
              f'Gender: <b>{gender}</b>\n' \
              f'Purpose: <b>{purpose}</b>\n' \
              f'Country teammates: <b>{country}</b>\n' \
              f'About yourself: <b>{about_yourself}</b>\n' \
              f'Playing games: <b>{games}</b>\n' \
              f'Level of play: <b>{play_level}</b>\n' \
              f'Your cool down: <b>{cool_down}</b>'

    if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
        await message.answer('–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!')
        await message.answer('–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:')
        await message.answer(text=text_ru)
        await message.answer(text='1. –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ\n'
                                  '2. –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ\n'
                                  '3. –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –∞–Ω–∫–µ—Ç—ã\n'
                                  '4. –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã', reply_markup=menu_my_profile_keyboard)
    else:
        await message.answer('Profile successfully added!')
        await message.answer('Your profile:')
        await message.answer(text=text_en)
        await message.answer(text='1. Edit my profile\n'
                                  '2. Change my photo\n'
                                  '3. Change profile text\n'
                                  '4. View profiles', reply_markup=menu_my_profile_keyboard)

    await state.set_state('my_profile_state')
