from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command

from loader import db
from keyboards.inline.gaming_keyboards import show_looking_for_keyboard, menu_my_profile_keyboard, get_teammates_country
from loader import dp
from utils.db_api import models


# –°—é–¥–∞ –ø–æ–ø–∞–¥–∞–µ–º, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–ò–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ–∏—Å–∫–∞"
@dp.message_handler(Command(['change_match']), state='*')
async def profile_change_match(message: types.Message, state: FSMContext):
    await state.reset_state()
    user_id = message.from_user.id
    user: models.User = await db.get_user(user_id)
    language = user.language
    age = user.age
    await state.update_data(user_=user, language=language)

    text_ru = '–ö–æ–≥–æ —Ç—ã –∏—â–µ—à—å?'
    text_en = 'Who are you looking for?'

    if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
        await message.answer(text=text_ru, reply_markup=show_looking_for_keyboard(language, age))
    else:
        await message.answer(text=text_en, reply_markup=show_looking_for_keyboard(language, age))

    await state.set_state('change_match_looking_for')


# –ò–∑–º–µ–Ω—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–º—É –µ–≥–æ –∞–Ω–∫–µ—Ç—É
@dp.message_handler(state='change_match_looking_for')
async def edit_looking_for(message: types.Message, state: FSMContext):
    data = await state.get_data()
    user: models.User = data.get('user_')
    language = data.get('language')

    purpose = message.text
    await state.update_data(purpose=purpose)

    await user.update(purpose=purpose).apply()

    name = user.name
    age = user.age
    gender = user.gender
    who_search = user.who_search
    country = user.country
    city = user.city
    about_yourself = user.about_yourself
    hobby = user.hobby
    photo = user.photo
    game1 = user.game1
    game2 = user.game2

    if game1 is not None and game2 is not None:
        games = f'{game1}, {game2}'
    elif game2 is None:
        games = f'{game1}'
    elif game1 is None:
        games = f'{game2}'
    else:
        games = ''

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª "–ü—Ä–æ—Å—Ç–æ –ø–æ–∏–≥—Ä–∞—Ç—å", –∏ —Ä–∞–Ω–µ–µ –æ–Ω –Ω–µ –∑–∞–ø–æ–ª–Ω—è–ª –∞–Ω–∫–µ—Ç—É –ø–æ –¥–∞–Ω–Ω–æ–π —Ü–µ–ª–∏
    if purpose in ['–ü—Ä–æ—Å—Ç–æ –ø–æ–∏–≥—Ä–∞—Ç—å', 'Just to play'] and user.play_level == '':

        if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            await message.answer('–ò–∑ –∫–∞–∫–∏—Ö —Å—Ç—Ä–∞–Ω –≤—ã —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ –±—ã –±—ã–ª–∏ –≤–∞—à–∏ —Ç–∏–º–º–µ–π—Ç—ã?',
                                 reply_markup=get_teammates_country(language))

        else:
            await message.answer('What countries do you want your teammates to be from?',
                                 reply_markup=get_teammates_country(language))

        await state.set_state('just_play_after_change_match')

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª "–ü—Ä–æ—Å—Ç–æ –ø–æ–∏–≥—Ä–∞—Ç—å", –∏ —Ä–∞–Ω–µ–µ –æ–Ω –∑–∞–ø–æ–ª–Ω—è–ª –∞–Ω–∫–µ—Ç—É –ø–æ –¥–∞–Ω–Ω–æ–π —Ü–µ–ª–∏
    elif purpose in ['–ü—Ä–æ—Å—Ç–æ –ø–æ–∏–≥—Ä–∞—Ç—å', 'Just to play']:

        text_ru = f'–í–æ–∑—Ä–∞—Å—Ç: <b>{user.age}</b>\n' \
                  f'–ü–æ–ª: <b>{user.gender}</b>\n' \
                  f'–¶–µ–ª—å: <b>{user.purpose}</b>\n' \
                  f'–°—Ç—Ä–∞–Ω–∞ –ø–æ–∏—Å–∫–∞: <b>{user.country}</b>\n' \
                  f'–û —Å–µ–±–µ: <b>{user.about_yourself}</b>\n' \
                  f'–í –∫–∞–∫–∏–µ –∏–≥—Ä—ã –∏–≥—Ä–∞—é: <b>{games}</b>\n' \
                  f'–£—Ä–æ–≤–µ–Ω—å –∏–≥—Ä—ã: <b>{user.play_level}</b>\n' \
                  f'–í–∞—à –ö/–î: <b>{user.cool_down}</b>'

        text_en = f'Age: <b>{user.age}</b>\n' \
                  f'Gender: <b>{user.gender}</b>\n' \
                  f'Purpose: <b>{user.purpose}</b>\n' \
                  f'Country teammates: <b>{user.country}</b>\n' \
                  f'About yourself: <b>{user.about_yourself}</b>\n' \
                  f'Playing games: <b>{games}</b>\n' \
                  f'Level of play: <b>{user.play_level}</b>\n' \
                  f'Your cool down: <b>{user.cool_down}</b>'

        if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            await message.answer('–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:')

            if photo == 'None':
                await message.answer(text=text_ru)
            else:
                await message.answer_photo(photo=user.photo, caption=text_ru)

            await message.answer(text='1. –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ\n'
                                      '2. –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ\n'
                                      '3. –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –∞–Ω–∫–µ—Ç—ã\n'
                                      '4. –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã', reply_markup=menu_my_profile_keyboard)

        await state.set_state('my_profile_state')

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª "–ö–æ–º–∞–Ω–¥—É –¥–ª—è –ø—Ä–∞–∫–æ–≤"
    elif purpose in ['–ö–æ–º–∞–Ω–¥—É –¥–ª—è –ø—Ä–∞–∫–æ–≤', 'A team for practitioners']:

        if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
            await message.answer('–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ç–∞–¥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏',
                                 reply_markup=show_looking_for_keyboard(language, age))
        else:
            await message.answer('This feature is under development',
                                 reply_markup=show_looking_for_keyboard(language, age))
        return

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª "–ß–µ–ª–æ–≤–µ–∫–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–π –∂–∏–∑–Ω–∏"
    else:
        text_ru = f'–ò–º—è: <b>{name}</b>\n' \
                  f'–í–æ–∑—Ä–∞—Å—Ç: <b>{age}</b>\n' \
                  f'–ü–æ–ª: <b>{gender}</b>\n' \
                  f'–ò—â—É: <b>{purpose}</b>\n' \
                  f'–ö–æ–≥–æ –∏—â—É: <b>{who_search}</b>\n' \
                  f'–°—Ç—Ä–∞–Ω–∞: <b>{country}</b>\n' \
                  f'–ì–æ—Ä–æ–¥: <b>{city}</b>\n' \
                  f'–û —Å–µ–±–µ: <b>{about_yourself}</b>\n' \
                  f'–•–æ–±–±–∏: <b>{hobby}</b>\n' \
                  f'–í –∫–∞–∫–∏–µ –∏–≥—Ä—ã –∏–≥—Ä–∞—é: <b>{games}</b>'

        text_en = f'Name: <b>{name}</b>\n' \
                  f'Age: <b>{age}</b>\n' \
                  f'Gender: <b>{gender}</b>\n' \
                  f'Search: <b>{purpose}</b>\n' \
                  f'Who search: <b>{who_search}</b>\n' \
                  f'Country: <b>{country}</b>\n' \
                  f'City: <b>{city}</b>\n' \
                  f'About yourself: <b>{about_yourself}</b>\n' \
                  f'Hobby: <b>{hobby}</b>\n' \
                  f'Playing games: <b>{games}</b>'

        if language == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':

            if photo == 'None':
                await message.answer(text=text_ru)
            else:
                await message.answer_photo(photo=user.photo, caption=text_ru)

            await message.answer(text='1. –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ\n'
                                      '2. –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ\n'
                                      '3. –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –∞–Ω–∫–µ—Ç—ã\n'
                                      '4. –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã', reply_markup=menu_my_profile_keyboard)
        else:
            if photo == 'None':
                await message.answer(text=text_en)
            else:
                await message.answer_photo(photo=user.photo, caption=text_en)

            await message.answer(text='1. Edit my profile\n'
                                      '2. Change my photo\n'
                                      '3. Change profile text\n'
                                      '4. View profiles', reply_markup=menu_my_profile_keyboard)

        await state.set_state('my_profile_state')
